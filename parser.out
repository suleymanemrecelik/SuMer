Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FALSE
    KEYWORD
    LSP
    NEWLINE
    RSP
    TRUE

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     statement -> statement COMMA statement
Rule 4     statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART
Rule 5     statement -> FUNCTION VAR LPAREN RPAREN DEFSTART
Rule 6     statement -> CALL VAR LPAREN statement RPAREN
Rule 7     statement -> CALL VAR LPAREN RPAREN
Rule 8     statement -> WHILE LPAREN expr RPAREN DEFSTART
Rule 9     statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART
Rule 10    statement -> IF LPAREN expr RPAREN DEFSTART
Rule 11    statement -> ELSEIF LPAREN expr RPAREN DEFSTART
Rule 12    statement -> ELSE DEFSTART
Rule 13    statement -> DVAR VAR
Rule 14    statement -> VAR EQUAL expr
Rule 15    statement -> DVAR VAR EQUAL expr
Rule 16    statement -> ARRAY VAR
Rule 17    statement -> VAR EQUAL LCB expr RCB
Rule 18    statement -> ARRAY VAR EQUAL LCB expr RCB
Rule 19    expr -> expr COMMA expr
Rule 20    statement -> PRINT LPAREN expr RPAREN
Rule 21    expr -> expr PLUS expr
Rule 22    expr -> expr MINUS expr
Rule 23    expr -> expr TIMES expr
Rule 24    expr -> expr DIVIDE expr
Rule 25    expr -> expr AND expr
Rule 26    expr -> expr OR expr
Rule 27    statement -> expr FPLUS expr
Rule 28    statement -> expr FMINUS expr
Rule 29    statement -> expr FTIMES expr
Rule 30    statement -> expr FDIVIDE expr
Rule 31    expr -> expr ISEQUAL expr
Rule 32    expr -> expr SMALLER expr
Rule 33    expr -> expr GREATER expr
Rule 34    expr -> expr NOT ISEQUAL expr
Rule 35    expr -> expr NOT SMALLER expr
Rule 36    expr -> expr NOT GREATER expr
Rule 37    expr -> NUMBER
Rule 38    expr -> DNUMBER
Rule 39    expr -> BOOLEAN
Rule 40    expr -> VAR
Rule 41    expr -> STRING
Rule 42    expr -> LPAREN expr RPAREN
Rule 43    statement -> DEFFINISH

Terminals, with rules where they appear

AND                  : 25
ARRAY                : 16 18
BOOLEAN              : 39
CALL                 : 6 7
COMMA                : 3 19
DEFFINISH            : 43
DEFSTART             : 4 5 8 9 10 11 12
DIVIDE               : 24
DNUMBER              : 38
DVAR                 : 13 15
ELSE                 : 12
ELSEIF               : 11
EQUAL                : 14 15 17 18
FALSE                : 
FDIVIDE              : 30
FMINUS               : 28
FOR                  : 9
FPLUS                : 27
FTIMES               : 29
FUNCTION             : 4 5
GREATER              : 33 36
IF                   : 10
ISEQUAL              : 31 34
KEYWORD              : 
LCB                  : 17 18
LPAREN               : 4 5 6 7 8 9 10 11 20 42
LSP                  : 
MINUS                : 22
NEWLINE              : 
NOT                  : 34 35 36
NUMBER               : 37
OR                   : 26
PLUS                 : 21
PRINT                : 20
RCB                  : 17 18
RPAREN               : 4 5 6 7 8 9 10 11 20 42
RSP                  : 
SEMICOLON            : 9 9
SMALLER              : 32 35
STRING               : 41
TIMES                : 23
TRUE                 : 
VAR                  : 4 5 6 7 13 14 15 16 17 18 40
WHILE                : 8
error                : 

Nonterminals, with rules where they appear

expr                 : 8 9 10 11 14 15 17 18 19 19 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 42
statement            : 1 2 3 3 4 6 9 9
statements           : 1 0

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . statement COMMA statement
    (4) statement -> . FUNCTION VAR LPAREN statement RPAREN DEFSTART
    (5) statement -> . FUNCTION VAR LPAREN RPAREN DEFSTART
    (6) statement -> . CALL VAR LPAREN statement RPAREN
    (7) statement -> . CALL VAR LPAREN RPAREN
    (8) statement -> . WHILE LPAREN expr RPAREN DEFSTART
    (9) statement -> . FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART
    (10) statement -> . IF LPAREN expr RPAREN DEFSTART
    (11) statement -> . ELSEIF LPAREN expr RPAREN DEFSTART
    (12) statement -> . ELSE DEFSTART
    (13) statement -> . DVAR VAR
    (14) statement -> . VAR EQUAL expr
    (15) statement -> . DVAR VAR EQUAL expr
    (16) statement -> . ARRAY VAR
    (17) statement -> . VAR EQUAL LCB expr RCB
    (18) statement -> . ARRAY VAR EQUAL LCB expr RCB
    (20) statement -> . PRINT LPAREN expr RPAREN
    (27) statement -> . expr FPLUS expr
    (28) statement -> . expr FMINUS expr
    (29) statement -> . expr FTIMES expr
    (30) statement -> . expr FDIVIDE expr
    (43) statement -> . DEFFINISH
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    FUNCTION        shift and go to state 3
    CALL            shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 9
    IF              shift and go to state 10
    ELSEIF          shift and go to state 11
    ELSE            shift and go to state 12
    DVAR            shift and go to state 13
    VAR             shift and go to state 4
    ARRAY           shift and go to state 14
    PRINT           shift and go to state 15
    DEFFINISH       shift and go to state 16
    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    expr                           shift and go to state 8

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (3) statement -> . statement COMMA statement
    (4) statement -> . FUNCTION VAR LPAREN statement RPAREN DEFSTART
    (5) statement -> . FUNCTION VAR LPAREN RPAREN DEFSTART
    (6) statement -> . CALL VAR LPAREN statement RPAREN
    (7) statement -> . CALL VAR LPAREN RPAREN
    (8) statement -> . WHILE LPAREN expr RPAREN DEFSTART
    (9) statement -> . FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART
    (10) statement -> . IF LPAREN expr RPAREN DEFSTART
    (11) statement -> . ELSEIF LPAREN expr RPAREN DEFSTART
    (12) statement -> . ELSE DEFSTART
    (13) statement -> . DVAR VAR
    (14) statement -> . VAR EQUAL expr
    (15) statement -> . DVAR VAR EQUAL expr
    (16) statement -> . ARRAY VAR
    (17) statement -> . VAR EQUAL LCB expr RCB
    (18) statement -> . ARRAY VAR EQUAL LCB expr RCB
    (20) statement -> . PRINT LPAREN expr RPAREN
    (27) statement -> . expr FPLUS expr
    (28) statement -> . expr FMINUS expr
    (29) statement -> . expr FTIMES expr
    (30) statement -> . expr FDIVIDE expr
    (43) statement -> . DEFFINISH
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    FUNCTION        shift and go to state 3
    CALL            shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 9
    IF              shift and go to state 10
    ELSEIF          shift and go to state 11
    ELSE            shift and go to state 12
    DVAR            shift and go to state 13
    VAR             shift and go to state 4
    ARRAY           shift and go to state 14
    PRINT           shift and go to state 15
    DEFFINISH       shift and go to state 16
    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    statement                      shift and go to state 21
    expr                           shift and go to state 8

state 2

    (2) statements -> statement .
    (3) statement -> statement . COMMA statement

    FUNCTION        reduce using rule 2 (statements -> statement .)
    CALL            reduce using rule 2 (statements -> statement .)
    WHILE           reduce using rule 2 (statements -> statement .)
    FOR             reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    ELSEIF          reduce using rule 2 (statements -> statement .)
    ELSE            reduce using rule 2 (statements -> statement .)
    DVAR            reduce using rule 2 (statements -> statement .)
    VAR             reduce using rule 2 (statements -> statement .)
    ARRAY           reduce using rule 2 (statements -> statement .)
    PRINT           reduce using rule 2 (statements -> statement .)
    DEFFINISH       reduce using rule 2 (statements -> statement .)
    NUMBER          reduce using rule 2 (statements -> statement .)
    DNUMBER         reduce using rule 2 (statements -> statement .)
    BOOLEAN         reduce using rule 2 (statements -> statement .)
    STRING          reduce using rule 2 (statements -> statement .)
    LPAREN          reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)
    COMMA           shift and go to state 22


state 3

    (4) statement -> FUNCTION . VAR LPAREN statement RPAREN DEFSTART
    (5) statement -> FUNCTION . VAR LPAREN RPAREN DEFSTART

    VAR             shift and go to state 23


state 4

    (14) statement -> VAR . EQUAL expr
    (17) statement -> VAR . EQUAL LCB expr RCB
    (40) expr -> VAR .

    EQUAL           shift and go to state 24
    FPLUS           reduce using rule 40 (expr -> VAR .)
    FMINUS          reduce using rule 40 (expr -> VAR .)
    FTIMES          reduce using rule 40 (expr -> VAR .)
    FDIVIDE         reduce using rule 40 (expr -> VAR .)
    COMMA           reduce using rule 40 (expr -> VAR .)
    PLUS            reduce using rule 40 (expr -> VAR .)
    MINUS           reduce using rule 40 (expr -> VAR .)
    TIMES           reduce using rule 40 (expr -> VAR .)
    DIVIDE          reduce using rule 40 (expr -> VAR .)
    AND             reduce using rule 40 (expr -> VAR .)
    OR              reduce using rule 40 (expr -> VAR .)
    ISEQUAL         reduce using rule 40 (expr -> VAR .)
    SMALLER         reduce using rule 40 (expr -> VAR .)
    GREATER         reduce using rule 40 (expr -> VAR .)
    NOT             reduce using rule 40 (expr -> VAR .)


state 5

    (42) expr -> LPAREN . expr RPAREN
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 25

state 6

    (6) statement -> CALL . VAR LPAREN statement RPAREN
    (7) statement -> CALL . VAR LPAREN RPAREN

    VAR             shift and go to state 27


state 7

    (8) statement -> WHILE . LPAREN expr RPAREN DEFSTART

    LPAREN          shift and go to state 28


state 8

    (27) statement -> expr . FPLUS expr
    (28) statement -> expr . FMINUS expr
    (29) statement -> expr . FTIMES expr
    (30) statement -> expr . FDIVIDE expr
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

    FPLUS           shift and go to state 29
    FMINUS          shift and go to state 30
    FTIMES          shift and go to state 31
    FDIVIDE         shift and go to state 32
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43


state 9

    (9) statement -> FOR . LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART

    LPAREN          shift and go to state 44


state 10

    (10) statement -> IF . LPAREN expr RPAREN DEFSTART

    LPAREN          shift and go to state 45


state 11

    (11) statement -> ELSEIF . LPAREN expr RPAREN DEFSTART

    LPAREN          shift and go to state 46


state 12

    (12) statement -> ELSE . DEFSTART

    DEFSTART        shift and go to state 47


state 13

    (13) statement -> DVAR . VAR
    (15) statement -> DVAR . VAR EQUAL expr

    VAR             shift and go to state 48


state 14

    (16) statement -> ARRAY . VAR
    (18) statement -> ARRAY . VAR EQUAL LCB expr RCB

    VAR             shift and go to state 49


state 15

    (20) statement -> PRINT . LPAREN expr RPAREN

    LPAREN          shift and go to state 50


state 16

    (43) statement -> DEFFINISH .

    COMMA           reduce using rule 43 (statement -> DEFFINISH .)
    FUNCTION        reduce using rule 43 (statement -> DEFFINISH .)
    CALL            reduce using rule 43 (statement -> DEFFINISH .)
    WHILE           reduce using rule 43 (statement -> DEFFINISH .)
    FOR             reduce using rule 43 (statement -> DEFFINISH .)
    IF              reduce using rule 43 (statement -> DEFFINISH .)
    ELSEIF          reduce using rule 43 (statement -> DEFFINISH .)
    ELSE            reduce using rule 43 (statement -> DEFFINISH .)
    DVAR            reduce using rule 43 (statement -> DEFFINISH .)
    VAR             reduce using rule 43 (statement -> DEFFINISH .)
    ARRAY           reduce using rule 43 (statement -> DEFFINISH .)
    PRINT           reduce using rule 43 (statement -> DEFFINISH .)
    DEFFINISH       reduce using rule 43 (statement -> DEFFINISH .)
    NUMBER          reduce using rule 43 (statement -> DEFFINISH .)
    DNUMBER         reduce using rule 43 (statement -> DEFFINISH .)
    BOOLEAN         reduce using rule 43 (statement -> DEFFINISH .)
    STRING          reduce using rule 43 (statement -> DEFFINISH .)
    LPAREN          reduce using rule 43 (statement -> DEFFINISH .)
    $end            reduce using rule 43 (statement -> DEFFINISH .)
    SEMICOLON       reduce using rule 43 (statement -> DEFFINISH .)
    RPAREN          reduce using rule 43 (statement -> DEFFINISH .)


state 17

    (37) expr -> NUMBER .

    FPLUS           reduce using rule 37 (expr -> NUMBER .)
    FMINUS          reduce using rule 37 (expr -> NUMBER .)
    FTIMES          reduce using rule 37 (expr -> NUMBER .)
    FDIVIDE         reduce using rule 37 (expr -> NUMBER .)
    COMMA           reduce using rule 37 (expr -> NUMBER .)
    PLUS            reduce using rule 37 (expr -> NUMBER .)
    MINUS           reduce using rule 37 (expr -> NUMBER .)
    TIMES           reduce using rule 37 (expr -> NUMBER .)
    DIVIDE          reduce using rule 37 (expr -> NUMBER .)
    AND             reduce using rule 37 (expr -> NUMBER .)
    OR              reduce using rule 37 (expr -> NUMBER .)
    ISEQUAL         reduce using rule 37 (expr -> NUMBER .)
    SMALLER         reduce using rule 37 (expr -> NUMBER .)
    GREATER         reduce using rule 37 (expr -> NUMBER .)
    NOT             reduce using rule 37 (expr -> NUMBER .)
    RPAREN          reduce using rule 37 (expr -> NUMBER .)
    FUNCTION        reduce using rule 37 (expr -> NUMBER .)
    CALL            reduce using rule 37 (expr -> NUMBER .)
    WHILE           reduce using rule 37 (expr -> NUMBER .)
    FOR             reduce using rule 37 (expr -> NUMBER .)
    IF              reduce using rule 37 (expr -> NUMBER .)
    ELSEIF          reduce using rule 37 (expr -> NUMBER .)
    ELSE            reduce using rule 37 (expr -> NUMBER .)
    DVAR            reduce using rule 37 (expr -> NUMBER .)
    VAR             reduce using rule 37 (expr -> NUMBER .)
    ARRAY           reduce using rule 37 (expr -> NUMBER .)
    PRINT           reduce using rule 37 (expr -> NUMBER .)
    DEFFINISH       reduce using rule 37 (expr -> NUMBER .)
    NUMBER          reduce using rule 37 (expr -> NUMBER .)
    DNUMBER         reduce using rule 37 (expr -> NUMBER .)
    BOOLEAN         reduce using rule 37 (expr -> NUMBER .)
    STRING          reduce using rule 37 (expr -> NUMBER .)
    LPAREN          reduce using rule 37 (expr -> NUMBER .)
    $end            reduce using rule 37 (expr -> NUMBER .)
    SEMICOLON       reduce using rule 37 (expr -> NUMBER .)
    RCB             reduce using rule 37 (expr -> NUMBER .)


state 18

    (38) expr -> DNUMBER .

    FPLUS           reduce using rule 38 (expr -> DNUMBER .)
    FMINUS          reduce using rule 38 (expr -> DNUMBER .)
    FTIMES          reduce using rule 38 (expr -> DNUMBER .)
    FDIVIDE         reduce using rule 38 (expr -> DNUMBER .)
    COMMA           reduce using rule 38 (expr -> DNUMBER .)
    PLUS            reduce using rule 38 (expr -> DNUMBER .)
    MINUS           reduce using rule 38 (expr -> DNUMBER .)
    TIMES           reduce using rule 38 (expr -> DNUMBER .)
    DIVIDE          reduce using rule 38 (expr -> DNUMBER .)
    AND             reduce using rule 38 (expr -> DNUMBER .)
    OR              reduce using rule 38 (expr -> DNUMBER .)
    ISEQUAL         reduce using rule 38 (expr -> DNUMBER .)
    SMALLER         reduce using rule 38 (expr -> DNUMBER .)
    GREATER         reduce using rule 38 (expr -> DNUMBER .)
    NOT             reduce using rule 38 (expr -> DNUMBER .)
    RPAREN          reduce using rule 38 (expr -> DNUMBER .)
    FUNCTION        reduce using rule 38 (expr -> DNUMBER .)
    CALL            reduce using rule 38 (expr -> DNUMBER .)
    WHILE           reduce using rule 38 (expr -> DNUMBER .)
    FOR             reduce using rule 38 (expr -> DNUMBER .)
    IF              reduce using rule 38 (expr -> DNUMBER .)
    ELSEIF          reduce using rule 38 (expr -> DNUMBER .)
    ELSE            reduce using rule 38 (expr -> DNUMBER .)
    DVAR            reduce using rule 38 (expr -> DNUMBER .)
    VAR             reduce using rule 38 (expr -> DNUMBER .)
    ARRAY           reduce using rule 38 (expr -> DNUMBER .)
    PRINT           reduce using rule 38 (expr -> DNUMBER .)
    DEFFINISH       reduce using rule 38 (expr -> DNUMBER .)
    NUMBER          reduce using rule 38 (expr -> DNUMBER .)
    DNUMBER         reduce using rule 38 (expr -> DNUMBER .)
    BOOLEAN         reduce using rule 38 (expr -> DNUMBER .)
    STRING          reduce using rule 38 (expr -> DNUMBER .)
    LPAREN          reduce using rule 38 (expr -> DNUMBER .)
    $end            reduce using rule 38 (expr -> DNUMBER .)
    SEMICOLON       reduce using rule 38 (expr -> DNUMBER .)
    RCB             reduce using rule 38 (expr -> DNUMBER .)


state 19

    (39) expr -> BOOLEAN .

    FPLUS           reduce using rule 39 (expr -> BOOLEAN .)
    FMINUS          reduce using rule 39 (expr -> BOOLEAN .)
    FTIMES          reduce using rule 39 (expr -> BOOLEAN .)
    FDIVIDE         reduce using rule 39 (expr -> BOOLEAN .)
    COMMA           reduce using rule 39 (expr -> BOOLEAN .)
    PLUS            reduce using rule 39 (expr -> BOOLEAN .)
    MINUS           reduce using rule 39 (expr -> BOOLEAN .)
    TIMES           reduce using rule 39 (expr -> BOOLEAN .)
    DIVIDE          reduce using rule 39 (expr -> BOOLEAN .)
    AND             reduce using rule 39 (expr -> BOOLEAN .)
    OR              reduce using rule 39 (expr -> BOOLEAN .)
    ISEQUAL         reduce using rule 39 (expr -> BOOLEAN .)
    SMALLER         reduce using rule 39 (expr -> BOOLEAN .)
    GREATER         reduce using rule 39 (expr -> BOOLEAN .)
    NOT             reduce using rule 39 (expr -> BOOLEAN .)
    RPAREN          reduce using rule 39 (expr -> BOOLEAN .)
    FUNCTION        reduce using rule 39 (expr -> BOOLEAN .)
    CALL            reduce using rule 39 (expr -> BOOLEAN .)
    WHILE           reduce using rule 39 (expr -> BOOLEAN .)
    FOR             reduce using rule 39 (expr -> BOOLEAN .)
    IF              reduce using rule 39 (expr -> BOOLEAN .)
    ELSEIF          reduce using rule 39 (expr -> BOOLEAN .)
    ELSE            reduce using rule 39 (expr -> BOOLEAN .)
    DVAR            reduce using rule 39 (expr -> BOOLEAN .)
    VAR             reduce using rule 39 (expr -> BOOLEAN .)
    ARRAY           reduce using rule 39 (expr -> BOOLEAN .)
    PRINT           reduce using rule 39 (expr -> BOOLEAN .)
    DEFFINISH       reduce using rule 39 (expr -> BOOLEAN .)
    NUMBER          reduce using rule 39 (expr -> BOOLEAN .)
    DNUMBER         reduce using rule 39 (expr -> BOOLEAN .)
    BOOLEAN         reduce using rule 39 (expr -> BOOLEAN .)
    STRING          reduce using rule 39 (expr -> BOOLEAN .)
    LPAREN          reduce using rule 39 (expr -> BOOLEAN .)
    $end            reduce using rule 39 (expr -> BOOLEAN .)
    SEMICOLON       reduce using rule 39 (expr -> BOOLEAN .)
    RCB             reduce using rule 39 (expr -> BOOLEAN .)


state 20

    (41) expr -> STRING .

    FPLUS           reduce using rule 41 (expr -> STRING .)
    FMINUS          reduce using rule 41 (expr -> STRING .)
    FTIMES          reduce using rule 41 (expr -> STRING .)
    FDIVIDE         reduce using rule 41 (expr -> STRING .)
    COMMA           reduce using rule 41 (expr -> STRING .)
    PLUS            reduce using rule 41 (expr -> STRING .)
    MINUS           reduce using rule 41 (expr -> STRING .)
    TIMES           reduce using rule 41 (expr -> STRING .)
    DIVIDE          reduce using rule 41 (expr -> STRING .)
    AND             reduce using rule 41 (expr -> STRING .)
    OR              reduce using rule 41 (expr -> STRING .)
    ISEQUAL         reduce using rule 41 (expr -> STRING .)
    SMALLER         reduce using rule 41 (expr -> STRING .)
    GREATER         reduce using rule 41 (expr -> STRING .)
    NOT             reduce using rule 41 (expr -> STRING .)
    RPAREN          reduce using rule 41 (expr -> STRING .)
    FUNCTION        reduce using rule 41 (expr -> STRING .)
    CALL            reduce using rule 41 (expr -> STRING .)
    WHILE           reduce using rule 41 (expr -> STRING .)
    FOR             reduce using rule 41 (expr -> STRING .)
    IF              reduce using rule 41 (expr -> STRING .)
    ELSEIF          reduce using rule 41 (expr -> STRING .)
    ELSE            reduce using rule 41 (expr -> STRING .)
    DVAR            reduce using rule 41 (expr -> STRING .)
    VAR             reduce using rule 41 (expr -> STRING .)
    ARRAY           reduce using rule 41 (expr -> STRING .)
    PRINT           reduce using rule 41 (expr -> STRING .)
    DEFFINISH       reduce using rule 41 (expr -> STRING .)
    NUMBER          reduce using rule 41 (expr -> STRING .)
    DNUMBER         reduce using rule 41 (expr -> STRING .)
    BOOLEAN         reduce using rule 41 (expr -> STRING .)
    STRING          reduce using rule 41 (expr -> STRING .)
    LPAREN          reduce using rule 41 (expr -> STRING .)
    $end            reduce using rule 41 (expr -> STRING .)
    SEMICOLON       reduce using rule 41 (expr -> STRING .)
    RCB             reduce using rule 41 (expr -> STRING .)


state 21

    (1) statements -> statements statement .
    (3) statement -> statement . COMMA statement

    FUNCTION        reduce using rule 1 (statements -> statements statement .)
    CALL            reduce using rule 1 (statements -> statements statement .)
    WHILE           reduce using rule 1 (statements -> statements statement .)
    FOR             reduce using rule 1 (statements -> statements statement .)
    IF              reduce using rule 1 (statements -> statements statement .)
    ELSEIF          reduce using rule 1 (statements -> statements statement .)
    ELSE            reduce using rule 1 (statements -> statements statement .)
    DVAR            reduce using rule 1 (statements -> statements statement .)
    VAR             reduce using rule 1 (statements -> statements statement .)
    ARRAY           reduce using rule 1 (statements -> statements statement .)
    PRINT           reduce using rule 1 (statements -> statements statement .)
    DEFFINISH       reduce using rule 1 (statements -> statements statement .)
    NUMBER          reduce using rule 1 (statements -> statements statement .)
    DNUMBER         reduce using rule 1 (statements -> statements statement .)
    BOOLEAN         reduce using rule 1 (statements -> statements statement .)
    STRING          reduce using rule 1 (statements -> statements statement .)
    LPAREN          reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)
    COMMA           shift and go to state 22


state 22

    (3) statement -> statement COMMA . statement
    (3) statement -> . statement COMMA statement
    (4) statement -> . FUNCTION VAR LPAREN statement RPAREN DEFSTART
    (5) statement -> . FUNCTION VAR LPAREN RPAREN DEFSTART
    (6) statement -> . CALL VAR LPAREN statement RPAREN
    (7) statement -> . CALL VAR LPAREN RPAREN
    (8) statement -> . WHILE LPAREN expr RPAREN DEFSTART
    (9) statement -> . FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART
    (10) statement -> . IF LPAREN expr RPAREN DEFSTART
    (11) statement -> . ELSEIF LPAREN expr RPAREN DEFSTART
    (12) statement -> . ELSE DEFSTART
    (13) statement -> . DVAR VAR
    (14) statement -> . VAR EQUAL expr
    (15) statement -> . DVAR VAR EQUAL expr
    (16) statement -> . ARRAY VAR
    (17) statement -> . VAR EQUAL LCB expr RCB
    (18) statement -> . ARRAY VAR EQUAL LCB expr RCB
    (20) statement -> . PRINT LPAREN expr RPAREN
    (27) statement -> . expr FPLUS expr
    (28) statement -> . expr FMINUS expr
    (29) statement -> . expr FTIMES expr
    (30) statement -> . expr FDIVIDE expr
    (43) statement -> . DEFFINISH
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    FUNCTION        shift and go to state 3
    CALL            shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 9
    IF              shift and go to state 10
    ELSEIF          shift and go to state 11
    ELSE            shift and go to state 12
    DVAR            shift and go to state 13
    VAR             shift and go to state 4
    ARRAY           shift and go to state 14
    PRINT           shift and go to state 15
    DEFFINISH       shift and go to state 16
    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    statement                      shift and go to state 51
    expr                           shift and go to state 8

state 23

    (4) statement -> FUNCTION VAR . LPAREN statement RPAREN DEFSTART
    (5) statement -> FUNCTION VAR . LPAREN RPAREN DEFSTART

    LPAREN          shift and go to state 52


state 24

    (14) statement -> VAR EQUAL . expr
    (17) statement -> VAR EQUAL . LCB expr RCB
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    LCB             shift and go to state 54
    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 53

state 25

    (42) expr -> LPAREN expr . RPAREN
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

    RPAREN          shift and go to state 55
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43


state 26

    (40) expr -> VAR .

    RPAREN          reduce using rule 40 (expr -> VAR .)
    COMMA           reduce using rule 40 (expr -> VAR .)
    PLUS            reduce using rule 40 (expr -> VAR .)
    MINUS           reduce using rule 40 (expr -> VAR .)
    TIMES           reduce using rule 40 (expr -> VAR .)
    DIVIDE          reduce using rule 40 (expr -> VAR .)
    AND             reduce using rule 40 (expr -> VAR .)
    OR              reduce using rule 40 (expr -> VAR .)
    ISEQUAL         reduce using rule 40 (expr -> VAR .)
    SMALLER         reduce using rule 40 (expr -> VAR .)
    GREATER         reduce using rule 40 (expr -> VAR .)
    NOT             reduce using rule 40 (expr -> VAR .)
    FUNCTION        reduce using rule 40 (expr -> VAR .)
    CALL            reduce using rule 40 (expr -> VAR .)
    WHILE           reduce using rule 40 (expr -> VAR .)
    FOR             reduce using rule 40 (expr -> VAR .)
    IF              reduce using rule 40 (expr -> VAR .)
    ELSEIF          reduce using rule 40 (expr -> VAR .)
    ELSE            reduce using rule 40 (expr -> VAR .)
    DVAR            reduce using rule 40 (expr -> VAR .)
    VAR             reduce using rule 40 (expr -> VAR .)
    ARRAY           reduce using rule 40 (expr -> VAR .)
    PRINT           reduce using rule 40 (expr -> VAR .)
    DEFFINISH       reduce using rule 40 (expr -> VAR .)
    NUMBER          reduce using rule 40 (expr -> VAR .)
    DNUMBER         reduce using rule 40 (expr -> VAR .)
    BOOLEAN         reduce using rule 40 (expr -> VAR .)
    STRING          reduce using rule 40 (expr -> VAR .)
    LPAREN          reduce using rule 40 (expr -> VAR .)
    $end            reduce using rule 40 (expr -> VAR .)
    SEMICOLON       reduce using rule 40 (expr -> VAR .)
    FPLUS           reduce using rule 40 (expr -> VAR .)
    FMINUS          reduce using rule 40 (expr -> VAR .)
    FTIMES          reduce using rule 40 (expr -> VAR .)
    FDIVIDE         reduce using rule 40 (expr -> VAR .)
    RCB             reduce using rule 40 (expr -> VAR .)


state 27

    (6) statement -> CALL VAR . LPAREN statement RPAREN
    (7) statement -> CALL VAR . LPAREN RPAREN

    LPAREN          shift and go to state 56


state 28

    (8) statement -> WHILE LPAREN . expr RPAREN DEFSTART
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 57

state 29

    (27) statement -> expr FPLUS . expr
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 58

state 30

    (28) statement -> expr FMINUS . expr
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 59

state 31

    (29) statement -> expr FTIMES . expr
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 60

state 32

    (30) statement -> expr FDIVIDE . expr
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 61

state 33

    (19) expr -> expr COMMA . expr
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 62

state 34

    (21) expr -> expr PLUS . expr
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 63

state 35

    (22) expr -> expr MINUS . expr
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 64

state 36

    (23) expr -> expr TIMES . expr
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 65

state 37

    (24) expr -> expr DIVIDE . expr
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 66

state 38

    (25) expr -> expr AND . expr
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 67

state 39

    (26) expr -> expr OR . expr
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 68

state 40

    (31) expr -> expr ISEQUAL . expr
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 69

state 41

    (32) expr -> expr SMALLER . expr
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 70

state 42

    (33) expr -> expr GREATER . expr
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 71

state 43

    (34) expr -> expr NOT . ISEQUAL expr
    (35) expr -> expr NOT . SMALLER expr
    (36) expr -> expr NOT . GREATER expr

    ISEQUAL         shift and go to state 72
    SMALLER         shift and go to state 73
    GREATER         shift and go to state 74


state 44

    (9) statement -> FOR LPAREN . statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART
    (3) statement -> . statement COMMA statement
    (4) statement -> . FUNCTION VAR LPAREN statement RPAREN DEFSTART
    (5) statement -> . FUNCTION VAR LPAREN RPAREN DEFSTART
    (6) statement -> . CALL VAR LPAREN statement RPAREN
    (7) statement -> . CALL VAR LPAREN RPAREN
    (8) statement -> . WHILE LPAREN expr RPAREN DEFSTART
    (9) statement -> . FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART
    (10) statement -> . IF LPAREN expr RPAREN DEFSTART
    (11) statement -> . ELSEIF LPAREN expr RPAREN DEFSTART
    (12) statement -> . ELSE DEFSTART
    (13) statement -> . DVAR VAR
    (14) statement -> . VAR EQUAL expr
    (15) statement -> . DVAR VAR EQUAL expr
    (16) statement -> . ARRAY VAR
    (17) statement -> . VAR EQUAL LCB expr RCB
    (18) statement -> . ARRAY VAR EQUAL LCB expr RCB
    (20) statement -> . PRINT LPAREN expr RPAREN
    (27) statement -> . expr FPLUS expr
    (28) statement -> . expr FMINUS expr
    (29) statement -> . expr FTIMES expr
    (30) statement -> . expr FDIVIDE expr
    (43) statement -> . DEFFINISH
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    FUNCTION        shift and go to state 3
    CALL            shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 9
    IF              shift and go to state 10
    ELSEIF          shift and go to state 11
    ELSE            shift and go to state 12
    DVAR            shift and go to state 13
    VAR             shift and go to state 4
    ARRAY           shift and go to state 14
    PRINT           shift and go to state 15
    DEFFINISH       shift and go to state 16
    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    statement                      shift and go to state 75
    expr                           shift and go to state 8

state 45

    (10) statement -> IF LPAREN . expr RPAREN DEFSTART
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 76

state 46

    (11) statement -> ELSEIF LPAREN . expr RPAREN DEFSTART
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 77

state 47

    (12) statement -> ELSE DEFSTART .

    COMMA           reduce using rule 12 (statement -> ELSE DEFSTART .)
    FUNCTION        reduce using rule 12 (statement -> ELSE DEFSTART .)
    CALL            reduce using rule 12 (statement -> ELSE DEFSTART .)
    WHILE           reduce using rule 12 (statement -> ELSE DEFSTART .)
    FOR             reduce using rule 12 (statement -> ELSE DEFSTART .)
    IF              reduce using rule 12 (statement -> ELSE DEFSTART .)
    ELSEIF          reduce using rule 12 (statement -> ELSE DEFSTART .)
    ELSE            reduce using rule 12 (statement -> ELSE DEFSTART .)
    DVAR            reduce using rule 12 (statement -> ELSE DEFSTART .)
    VAR             reduce using rule 12 (statement -> ELSE DEFSTART .)
    ARRAY           reduce using rule 12 (statement -> ELSE DEFSTART .)
    PRINT           reduce using rule 12 (statement -> ELSE DEFSTART .)
    DEFFINISH       reduce using rule 12 (statement -> ELSE DEFSTART .)
    NUMBER          reduce using rule 12 (statement -> ELSE DEFSTART .)
    DNUMBER         reduce using rule 12 (statement -> ELSE DEFSTART .)
    BOOLEAN         reduce using rule 12 (statement -> ELSE DEFSTART .)
    STRING          reduce using rule 12 (statement -> ELSE DEFSTART .)
    LPAREN          reduce using rule 12 (statement -> ELSE DEFSTART .)
    $end            reduce using rule 12 (statement -> ELSE DEFSTART .)
    SEMICOLON       reduce using rule 12 (statement -> ELSE DEFSTART .)
    RPAREN          reduce using rule 12 (statement -> ELSE DEFSTART .)


state 48

    (13) statement -> DVAR VAR .
    (15) statement -> DVAR VAR . EQUAL expr

    COMMA           reduce using rule 13 (statement -> DVAR VAR .)
    FUNCTION        reduce using rule 13 (statement -> DVAR VAR .)
    CALL            reduce using rule 13 (statement -> DVAR VAR .)
    WHILE           reduce using rule 13 (statement -> DVAR VAR .)
    FOR             reduce using rule 13 (statement -> DVAR VAR .)
    IF              reduce using rule 13 (statement -> DVAR VAR .)
    ELSEIF          reduce using rule 13 (statement -> DVAR VAR .)
    ELSE            reduce using rule 13 (statement -> DVAR VAR .)
    DVAR            reduce using rule 13 (statement -> DVAR VAR .)
    VAR             reduce using rule 13 (statement -> DVAR VAR .)
    ARRAY           reduce using rule 13 (statement -> DVAR VAR .)
    PRINT           reduce using rule 13 (statement -> DVAR VAR .)
    DEFFINISH       reduce using rule 13 (statement -> DVAR VAR .)
    NUMBER          reduce using rule 13 (statement -> DVAR VAR .)
    DNUMBER         reduce using rule 13 (statement -> DVAR VAR .)
    BOOLEAN         reduce using rule 13 (statement -> DVAR VAR .)
    STRING          reduce using rule 13 (statement -> DVAR VAR .)
    LPAREN          reduce using rule 13 (statement -> DVAR VAR .)
    $end            reduce using rule 13 (statement -> DVAR VAR .)
    SEMICOLON       reduce using rule 13 (statement -> DVAR VAR .)
    RPAREN          reduce using rule 13 (statement -> DVAR VAR .)
    EQUAL           shift and go to state 78


state 49

    (16) statement -> ARRAY VAR .
    (18) statement -> ARRAY VAR . EQUAL LCB expr RCB

    COMMA           reduce using rule 16 (statement -> ARRAY VAR .)
    FUNCTION        reduce using rule 16 (statement -> ARRAY VAR .)
    CALL            reduce using rule 16 (statement -> ARRAY VAR .)
    WHILE           reduce using rule 16 (statement -> ARRAY VAR .)
    FOR             reduce using rule 16 (statement -> ARRAY VAR .)
    IF              reduce using rule 16 (statement -> ARRAY VAR .)
    ELSEIF          reduce using rule 16 (statement -> ARRAY VAR .)
    ELSE            reduce using rule 16 (statement -> ARRAY VAR .)
    DVAR            reduce using rule 16 (statement -> ARRAY VAR .)
    VAR             reduce using rule 16 (statement -> ARRAY VAR .)
    ARRAY           reduce using rule 16 (statement -> ARRAY VAR .)
    PRINT           reduce using rule 16 (statement -> ARRAY VAR .)
    DEFFINISH       reduce using rule 16 (statement -> ARRAY VAR .)
    NUMBER          reduce using rule 16 (statement -> ARRAY VAR .)
    DNUMBER         reduce using rule 16 (statement -> ARRAY VAR .)
    BOOLEAN         reduce using rule 16 (statement -> ARRAY VAR .)
    STRING          reduce using rule 16 (statement -> ARRAY VAR .)
    LPAREN          reduce using rule 16 (statement -> ARRAY VAR .)
    $end            reduce using rule 16 (statement -> ARRAY VAR .)
    SEMICOLON       reduce using rule 16 (statement -> ARRAY VAR .)
    RPAREN          reduce using rule 16 (statement -> ARRAY VAR .)
    EQUAL           shift and go to state 79


state 50

    (20) statement -> PRINT LPAREN . expr RPAREN
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 80

state 51

    (3) statement -> statement COMMA statement .
    (3) statement -> statement . COMMA statement

  ! shift/reduce conflict for COMMA resolved as shift
    FUNCTION        reduce using rule 3 (statement -> statement COMMA statement .)
    CALL            reduce using rule 3 (statement -> statement COMMA statement .)
    WHILE           reduce using rule 3 (statement -> statement COMMA statement .)
    FOR             reduce using rule 3 (statement -> statement COMMA statement .)
    IF              reduce using rule 3 (statement -> statement COMMA statement .)
    ELSEIF          reduce using rule 3 (statement -> statement COMMA statement .)
    ELSE            reduce using rule 3 (statement -> statement COMMA statement .)
    DVAR            reduce using rule 3 (statement -> statement COMMA statement .)
    VAR             reduce using rule 3 (statement -> statement COMMA statement .)
    ARRAY           reduce using rule 3 (statement -> statement COMMA statement .)
    PRINT           reduce using rule 3 (statement -> statement COMMA statement .)
    DEFFINISH       reduce using rule 3 (statement -> statement COMMA statement .)
    NUMBER          reduce using rule 3 (statement -> statement COMMA statement .)
    DNUMBER         reduce using rule 3 (statement -> statement COMMA statement .)
    BOOLEAN         reduce using rule 3 (statement -> statement COMMA statement .)
    STRING          reduce using rule 3 (statement -> statement COMMA statement .)
    LPAREN          reduce using rule 3 (statement -> statement COMMA statement .)
    $end            reduce using rule 3 (statement -> statement COMMA statement .)
    SEMICOLON       reduce using rule 3 (statement -> statement COMMA statement .)
    RPAREN          reduce using rule 3 (statement -> statement COMMA statement .)
    COMMA           shift and go to state 22

  ! COMMA           [ reduce using rule 3 (statement -> statement COMMA statement .) ]


state 52

    (4) statement -> FUNCTION VAR LPAREN . statement RPAREN DEFSTART
    (5) statement -> FUNCTION VAR LPAREN . RPAREN DEFSTART
    (3) statement -> . statement COMMA statement
    (4) statement -> . FUNCTION VAR LPAREN statement RPAREN DEFSTART
    (5) statement -> . FUNCTION VAR LPAREN RPAREN DEFSTART
    (6) statement -> . CALL VAR LPAREN statement RPAREN
    (7) statement -> . CALL VAR LPAREN RPAREN
    (8) statement -> . WHILE LPAREN expr RPAREN DEFSTART
    (9) statement -> . FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART
    (10) statement -> . IF LPAREN expr RPAREN DEFSTART
    (11) statement -> . ELSEIF LPAREN expr RPAREN DEFSTART
    (12) statement -> . ELSE DEFSTART
    (13) statement -> . DVAR VAR
    (14) statement -> . VAR EQUAL expr
    (15) statement -> . DVAR VAR EQUAL expr
    (16) statement -> . ARRAY VAR
    (17) statement -> . VAR EQUAL LCB expr RCB
    (18) statement -> . ARRAY VAR EQUAL LCB expr RCB
    (20) statement -> . PRINT LPAREN expr RPAREN
    (27) statement -> . expr FPLUS expr
    (28) statement -> . expr FMINUS expr
    (29) statement -> . expr FTIMES expr
    (30) statement -> . expr FDIVIDE expr
    (43) statement -> . DEFFINISH
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    RPAREN          shift and go to state 82
    FUNCTION        shift and go to state 3
    CALL            shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 9
    IF              shift and go to state 10
    ELSEIF          shift and go to state 11
    ELSE            shift and go to state 12
    DVAR            shift and go to state 13
    VAR             shift and go to state 4
    ARRAY           shift and go to state 14
    PRINT           shift and go to state 15
    DEFFINISH       shift and go to state 16
    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    statement                      shift and go to state 81
    expr                           shift and go to state 8

state 53

    (14) statement -> VAR EQUAL expr .
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

  ! shift/reduce conflict for COMMA resolved as shift
    FUNCTION        reduce using rule 14 (statement -> VAR EQUAL expr .)
    CALL            reduce using rule 14 (statement -> VAR EQUAL expr .)
    WHILE           reduce using rule 14 (statement -> VAR EQUAL expr .)
    FOR             reduce using rule 14 (statement -> VAR EQUAL expr .)
    IF              reduce using rule 14 (statement -> VAR EQUAL expr .)
    ELSEIF          reduce using rule 14 (statement -> VAR EQUAL expr .)
    ELSE            reduce using rule 14 (statement -> VAR EQUAL expr .)
    DVAR            reduce using rule 14 (statement -> VAR EQUAL expr .)
    VAR             reduce using rule 14 (statement -> VAR EQUAL expr .)
    ARRAY           reduce using rule 14 (statement -> VAR EQUAL expr .)
    PRINT           reduce using rule 14 (statement -> VAR EQUAL expr .)
    DEFFINISH       reduce using rule 14 (statement -> VAR EQUAL expr .)
    NUMBER          reduce using rule 14 (statement -> VAR EQUAL expr .)
    DNUMBER         reduce using rule 14 (statement -> VAR EQUAL expr .)
    BOOLEAN         reduce using rule 14 (statement -> VAR EQUAL expr .)
    STRING          reduce using rule 14 (statement -> VAR EQUAL expr .)
    LPAREN          reduce using rule 14 (statement -> VAR EQUAL expr .)
    $end            reduce using rule 14 (statement -> VAR EQUAL expr .)
    SEMICOLON       reduce using rule 14 (statement -> VAR EQUAL expr .)
    RPAREN          reduce using rule 14 (statement -> VAR EQUAL expr .)
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43

  ! COMMA           [ reduce using rule 14 (statement -> VAR EQUAL expr .) ]


state 54

    (17) statement -> VAR EQUAL LCB . expr RCB
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 83

state 55

    (42) expr -> LPAREN expr RPAREN .

    FPLUS           reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    FMINUS          reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    FTIMES          reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    FDIVIDE         reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    DIVIDE          reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    AND             reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    OR              reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    ISEQUAL         reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    SMALLER         reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    GREATER         reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    NOT             reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    FUNCTION        reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    CALL            reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    WHILE           reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    FOR             reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    IF              reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    ELSEIF          reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    ELSE            reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    DVAR            reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    VAR             reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    ARRAY           reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    PRINT           reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    DEFFINISH       reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    NUMBER          reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    DNUMBER         reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    BOOLEAN         reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    STRING          reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    LPAREN          reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    $end            reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 42 (expr -> LPAREN expr RPAREN .)
    RCB             reduce using rule 42 (expr -> LPAREN expr RPAREN .)


state 56

    (6) statement -> CALL VAR LPAREN . statement RPAREN
    (7) statement -> CALL VAR LPAREN . RPAREN
    (3) statement -> . statement COMMA statement
    (4) statement -> . FUNCTION VAR LPAREN statement RPAREN DEFSTART
    (5) statement -> . FUNCTION VAR LPAREN RPAREN DEFSTART
    (6) statement -> . CALL VAR LPAREN statement RPAREN
    (7) statement -> . CALL VAR LPAREN RPAREN
    (8) statement -> . WHILE LPAREN expr RPAREN DEFSTART
    (9) statement -> . FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART
    (10) statement -> . IF LPAREN expr RPAREN DEFSTART
    (11) statement -> . ELSEIF LPAREN expr RPAREN DEFSTART
    (12) statement -> . ELSE DEFSTART
    (13) statement -> . DVAR VAR
    (14) statement -> . VAR EQUAL expr
    (15) statement -> . DVAR VAR EQUAL expr
    (16) statement -> . ARRAY VAR
    (17) statement -> . VAR EQUAL LCB expr RCB
    (18) statement -> . ARRAY VAR EQUAL LCB expr RCB
    (20) statement -> . PRINT LPAREN expr RPAREN
    (27) statement -> . expr FPLUS expr
    (28) statement -> . expr FMINUS expr
    (29) statement -> . expr FTIMES expr
    (30) statement -> . expr FDIVIDE expr
    (43) statement -> . DEFFINISH
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    RPAREN          shift and go to state 85
    FUNCTION        shift and go to state 3
    CALL            shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 9
    IF              shift and go to state 10
    ELSEIF          shift and go to state 11
    ELSE            shift and go to state 12
    DVAR            shift and go to state 13
    VAR             shift and go to state 4
    ARRAY           shift and go to state 14
    PRINT           shift and go to state 15
    DEFFINISH       shift and go to state 16
    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    statement                      shift and go to state 84
    expr                           shift and go to state 8

state 57

    (8) statement -> WHILE LPAREN expr . RPAREN DEFSTART
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

    RPAREN          shift and go to state 86
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43


state 58

    (27) statement -> expr FPLUS expr .
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

  ! shift/reduce conflict for COMMA resolved as shift
    FUNCTION        reduce using rule 27 (statement -> expr FPLUS expr .)
    CALL            reduce using rule 27 (statement -> expr FPLUS expr .)
    WHILE           reduce using rule 27 (statement -> expr FPLUS expr .)
    FOR             reduce using rule 27 (statement -> expr FPLUS expr .)
    IF              reduce using rule 27 (statement -> expr FPLUS expr .)
    ELSEIF          reduce using rule 27 (statement -> expr FPLUS expr .)
    ELSE            reduce using rule 27 (statement -> expr FPLUS expr .)
    DVAR            reduce using rule 27 (statement -> expr FPLUS expr .)
    VAR             reduce using rule 27 (statement -> expr FPLUS expr .)
    ARRAY           reduce using rule 27 (statement -> expr FPLUS expr .)
    PRINT           reduce using rule 27 (statement -> expr FPLUS expr .)
    DEFFINISH       reduce using rule 27 (statement -> expr FPLUS expr .)
    NUMBER          reduce using rule 27 (statement -> expr FPLUS expr .)
    DNUMBER         reduce using rule 27 (statement -> expr FPLUS expr .)
    BOOLEAN         reduce using rule 27 (statement -> expr FPLUS expr .)
    STRING          reduce using rule 27 (statement -> expr FPLUS expr .)
    LPAREN          reduce using rule 27 (statement -> expr FPLUS expr .)
    $end            reduce using rule 27 (statement -> expr FPLUS expr .)
    SEMICOLON       reduce using rule 27 (statement -> expr FPLUS expr .)
    RPAREN          reduce using rule 27 (statement -> expr FPLUS expr .)
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43

  ! COMMA           [ reduce using rule 27 (statement -> expr FPLUS expr .) ]


state 59

    (28) statement -> expr FMINUS expr .
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

  ! shift/reduce conflict for COMMA resolved as shift
    FUNCTION        reduce using rule 28 (statement -> expr FMINUS expr .)
    CALL            reduce using rule 28 (statement -> expr FMINUS expr .)
    WHILE           reduce using rule 28 (statement -> expr FMINUS expr .)
    FOR             reduce using rule 28 (statement -> expr FMINUS expr .)
    IF              reduce using rule 28 (statement -> expr FMINUS expr .)
    ELSEIF          reduce using rule 28 (statement -> expr FMINUS expr .)
    ELSE            reduce using rule 28 (statement -> expr FMINUS expr .)
    DVAR            reduce using rule 28 (statement -> expr FMINUS expr .)
    VAR             reduce using rule 28 (statement -> expr FMINUS expr .)
    ARRAY           reduce using rule 28 (statement -> expr FMINUS expr .)
    PRINT           reduce using rule 28 (statement -> expr FMINUS expr .)
    DEFFINISH       reduce using rule 28 (statement -> expr FMINUS expr .)
    NUMBER          reduce using rule 28 (statement -> expr FMINUS expr .)
    DNUMBER         reduce using rule 28 (statement -> expr FMINUS expr .)
    BOOLEAN         reduce using rule 28 (statement -> expr FMINUS expr .)
    STRING          reduce using rule 28 (statement -> expr FMINUS expr .)
    LPAREN          reduce using rule 28 (statement -> expr FMINUS expr .)
    $end            reduce using rule 28 (statement -> expr FMINUS expr .)
    SEMICOLON       reduce using rule 28 (statement -> expr FMINUS expr .)
    RPAREN          reduce using rule 28 (statement -> expr FMINUS expr .)
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43

  ! COMMA           [ reduce using rule 28 (statement -> expr FMINUS expr .) ]


state 60

    (29) statement -> expr FTIMES expr .
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

  ! shift/reduce conflict for COMMA resolved as shift
    FUNCTION        reduce using rule 29 (statement -> expr FTIMES expr .)
    CALL            reduce using rule 29 (statement -> expr FTIMES expr .)
    WHILE           reduce using rule 29 (statement -> expr FTIMES expr .)
    FOR             reduce using rule 29 (statement -> expr FTIMES expr .)
    IF              reduce using rule 29 (statement -> expr FTIMES expr .)
    ELSEIF          reduce using rule 29 (statement -> expr FTIMES expr .)
    ELSE            reduce using rule 29 (statement -> expr FTIMES expr .)
    DVAR            reduce using rule 29 (statement -> expr FTIMES expr .)
    VAR             reduce using rule 29 (statement -> expr FTIMES expr .)
    ARRAY           reduce using rule 29 (statement -> expr FTIMES expr .)
    PRINT           reduce using rule 29 (statement -> expr FTIMES expr .)
    DEFFINISH       reduce using rule 29 (statement -> expr FTIMES expr .)
    NUMBER          reduce using rule 29 (statement -> expr FTIMES expr .)
    DNUMBER         reduce using rule 29 (statement -> expr FTIMES expr .)
    BOOLEAN         reduce using rule 29 (statement -> expr FTIMES expr .)
    STRING          reduce using rule 29 (statement -> expr FTIMES expr .)
    LPAREN          reduce using rule 29 (statement -> expr FTIMES expr .)
    $end            reduce using rule 29 (statement -> expr FTIMES expr .)
    SEMICOLON       reduce using rule 29 (statement -> expr FTIMES expr .)
    RPAREN          reduce using rule 29 (statement -> expr FTIMES expr .)
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43

  ! COMMA           [ reduce using rule 29 (statement -> expr FTIMES expr .) ]


state 61

    (30) statement -> expr FDIVIDE expr .
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

  ! shift/reduce conflict for COMMA resolved as shift
    FUNCTION        reduce using rule 30 (statement -> expr FDIVIDE expr .)
    CALL            reduce using rule 30 (statement -> expr FDIVIDE expr .)
    WHILE           reduce using rule 30 (statement -> expr FDIVIDE expr .)
    FOR             reduce using rule 30 (statement -> expr FDIVIDE expr .)
    IF              reduce using rule 30 (statement -> expr FDIVIDE expr .)
    ELSEIF          reduce using rule 30 (statement -> expr FDIVIDE expr .)
    ELSE            reduce using rule 30 (statement -> expr FDIVIDE expr .)
    DVAR            reduce using rule 30 (statement -> expr FDIVIDE expr .)
    VAR             reduce using rule 30 (statement -> expr FDIVIDE expr .)
    ARRAY           reduce using rule 30 (statement -> expr FDIVIDE expr .)
    PRINT           reduce using rule 30 (statement -> expr FDIVIDE expr .)
    DEFFINISH       reduce using rule 30 (statement -> expr FDIVIDE expr .)
    NUMBER          reduce using rule 30 (statement -> expr FDIVIDE expr .)
    DNUMBER         reduce using rule 30 (statement -> expr FDIVIDE expr .)
    BOOLEAN         reduce using rule 30 (statement -> expr FDIVIDE expr .)
    STRING          reduce using rule 30 (statement -> expr FDIVIDE expr .)
    LPAREN          reduce using rule 30 (statement -> expr FDIVIDE expr .)
    $end            reduce using rule 30 (statement -> expr FDIVIDE expr .)
    SEMICOLON       reduce using rule 30 (statement -> expr FDIVIDE expr .)
    RPAREN          reduce using rule 30 (statement -> expr FDIVIDE expr .)
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43

  ! COMMA           [ reduce using rule 30 (statement -> expr FDIVIDE expr .) ]


state 62

    (19) expr -> expr COMMA expr .
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    FPLUS           reduce using rule 19 (expr -> expr COMMA expr .)
    FMINUS          reduce using rule 19 (expr -> expr COMMA expr .)
    FTIMES          reduce using rule 19 (expr -> expr COMMA expr .)
    FDIVIDE         reduce using rule 19 (expr -> expr COMMA expr .)
    RPAREN          reduce using rule 19 (expr -> expr COMMA expr .)
    FUNCTION        reduce using rule 19 (expr -> expr COMMA expr .)
    CALL            reduce using rule 19 (expr -> expr COMMA expr .)
    WHILE           reduce using rule 19 (expr -> expr COMMA expr .)
    FOR             reduce using rule 19 (expr -> expr COMMA expr .)
    IF              reduce using rule 19 (expr -> expr COMMA expr .)
    ELSEIF          reduce using rule 19 (expr -> expr COMMA expr .)
    ELSE            reduce using rule 19 (expr -> expr COMMA expr .)
    DVAR            reduce using rule 19 (expr -> expr COMMA expr .)
    VAR             reduce using rule 19 (expr -> expr COMMA expr .)
    ARRAY           reduce using rule 19 (expr -> expr COMMA expr .)
    PRINT           reduce using rule 19 (expr -> expr COMMA expr .)
    DEFFINISH       reduce using rule 19 (expr -> expr COMMA expr .)
    NUMBER          reduce using rule 19 (expr -> expr COMMA expr .)
    DNUMBER         reduce using rule 19 (expr -> expr COMMA expr .)
    BOOLEAN         reduce using rule 19 (expr -> expr COMMA expr .)
    STRING          reduce using rule 19 (expr -> expr COMMA expr .)
    LPAREN          reduce using rule 19 (expr -> expr COMMA expr .)
    $end            reduce using rule 19 (expr -> expr COMMA expr .)
    SEMICOLON       reduce using rule 19 (expr -> expr COMMA expr .)
    RCB             reduce using rule 19 (expr -> expr COMMA expr .)
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43

  ! COMMA           [ reduce using rule 19 (expr -> expr COMMA expr .) ]
  ! PLUS            [ reduce using rule 19 (expr -> expr COMMA expr .) ]
  ! MINUS           [ reduce using rule 19 (expr -> expr COMMA expr .) ]
  ! TIMES           [ reduce using rule 19 (expr -> expr COMMA expr .) ]
  ! DIVIDE          [ reduce using rule 19 (expr -> expr COMMA expr .) ]
  ! AND             [ reduce using rule 19 (expr -> expr COMMA expr .) ]
  ! OR              [ reduce using rule 19 (expr -> expr COMMA expr .) ]
  ! ISEQUAL         [ reduce using rule 19 (expr -> expr COMMA expr .) ]
  ! SMALLER         [ reduce using rule 19 (expr -> expr COMMA expr .) ]
  ! GREATER         [ reduce using rule 19 (expr -> expr COMMA expr .) ]
  ! NOT             [ reduce using rule 19 (expr -> expr COMMA expr .) ]


state 63

    (21) expr -> expr PLUS expr .
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    FPLUS           reduce using rule 21 (expr -> expr PLUS expr .)
    FMINUS          reduce using rule 21 (expr -> expr PLUS expr .)
    FTIMES          reduce using rule 21 (expr -> expr PLUS expr .)
    FDIVIDE         reduce using rule 21 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 21 (expr -> expr PLUS expr .)
    FUNCTION        reduce using rule 21 (expr -> expr PLUS expr .)
    CALL            reduce using rule 21 (expr -> expr PLUS expr .)
    WHILE           reduce using rule 21 (expr -> expr PLUS expr .)
    FOR             reduce using rule 21 (expr -> expr PLUS expr .)
    IF              reduce using rule 21 (expr -> expr PLUS expr .)
    ELSEIF          reduce using rule 21 (expr -> expr PLUS expr .)
    ELSE            reduce using rule 21 (expr -> expr PLUS expr .)
    DVAR            reduce using rule 21 (expr -> expr PLUS expr .)
    VAR             reduce using rule 21 (expr -> expr PLUS expr .)
    ARRAY           reduce using rule 21 (expr -> expr PLUS expr .)
    PRINT           reduce using rule 21 (expr -> expr PLUS expr .)
    DEFFINISH       reduce using rule 21 (expr -> expr PLUS expr .)
    NUMBER          reduce using rule 21 (expr -> expr PLUS expr .)
    DNUMBER         reduce using rule 21 (expr -> expr PLUS expr .)
    BOOLEAN         reduce using rule 21 (expr -> expr PLUS expr .)
    STRING          reduce using rule 21 (expr -> expr PLUS expr .)
    LPAREN          reduce using rule 21 (expr -> expr PLUS expr .)
    $end            reduce using rule 21 (expr -> expr PLUS expr .)
    SEMICOLON       reduce using rule 21 (expr -> expr PLUS expr .)
    RCB             reduce using rule 21 (expr -> expr PLUS expr .)
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43

  ! COMMA           [ reduce using rule 21 (expr -> expr PLUS expr .) ]
  ! PLUS            [ reduce using rule 21 (expr -> expr PLUS expr .) ]
  ! MINUS           [ reduce using rule 21 (expr -> expr PLUS expr .) ]
  ! TIMES           [ reduce using rule 21 (expr -> expr PLUS expr .) ]
  ! DIVIDE          [ reduce using rule 21 (expr -> expr PLUS expr .) ]
  ! AND             [ reduce using rule 21 (expr -> expr PLUS expr .) ]
  ! OR              [ reduce using rule 21 (expr -> expr PLUS expr .) ]
  ! ISEQUAL         [ reduce using rule 21 (expr -> expr PLUS expr .) ]
  ! SMALLER         [ reduce using rule 21 (expr -> expr PLUS expr .) ]
  ! GREATER         [ reduce using rule 21 (expr -> expr PLUS expr .) ]
  ! NOT             [ reduce using rule 21 (expr -> expr PLUS expr .) ]


state 64

    (22) expr -> expr MINUS expr .
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    FPLUS           reduce using rule 22 (expr -> expr MINUS expr .)
    FMINUS          reduce using rule 22 (expr -> expr MINUS expr .)
    FTIMES          reduce using rule 22 (expr -> expr MINUS expr .)
    FDIVIDE         reduce using rule 22 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 22 (expr -> expr MINUS expr .)
    FUNCTION        reduce using rule 22 (expr -> expr MINUS expr .)
    CALL            reduce using rule 22 (expr -> expr MINUS expr .)
    WHILE           reduce using rule 22 (expr -> expr MINUS expr .)
    FOR             reduce using rule 22 (expr -> expr MINUS expr .)
    IF              reduce using rule 22 (expr -> expr MINUS expr .)
    ELSEIF          reduce using rule 22 (expr -> expr MINUS expr .)
    ELSE            reduce using rule 22 (expr -> expr MINUS expr .)
    DVAR            reduce using rule 22 (expr -> expr MINUS expr .)
    VAR             reduce using rule 22 (expr -> expr MINUS expr .)
    ARRAY           reduce using rule 22 (expr -> expr MINUS expr .)
    PRINT           reduce using rule 22 (expr -> expr MINUS expr .)
    DEFFINISH       reduce using rule 22 (expr -> expr MINUS expr .)
    NUMBER          reduce using rule 22 (expr -> expr MINUS expr .)
    DNUMBER         reduce using rule 22 (expr -> expr MINUS expr .)
    BOOLEAN         reduce using rule 22 (expr -> expr MINUS expr .)
    STRING          reduce using rule 22 (expr -> expr MINUS expr .)
    LPAREN          reduce using rule 22 (expr -> expr MINUS expr .)
    $end            reduce using rule 22 (expr -> expr MINUS expr .)
    SEMICOLON       reduce using rule 22 (expr -> expr MINUS expr .)
    RCB             reduce using rule 22 (expr -> expr MINUS expr .)
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43

  ! COMMA           [ reduce using rule 22 (expr -> expr MINUS expr .) ]
  ! PLUS            [ reduce using rule 22 (expr -> expr MINUS expr .) ]
  ! MINUS           [ reduce using rule 22 (expr -> expr MINUS expr .) ]
  ! TIMES           [ reduce using rule 22 (expr -> expr MINUS expr .) ]
  ! DIVIDE          [ reduce using rule 22 (expr -> expr MINUS expr .) ]
  ! AND             [ reduce using rule 22 (expr -> expr MINUS expr .) ]
  ! OR              [ reduce using rule 22 (expr -> expr MINUS expr .) ]
  ! ISEQUAL         [ reduce using rule 22 (expr -> expr MINUS expr .) ]
  ! SMALLER         [ reduce using rule 22 (expr -> expr MINUS expr .) ]
  ! GREATER         [ reduce using rule 22 (expr -> expr MINUS expr .) ]
  ! NOT             [ reduce using rule 22 (expr -> expr MINUS expr .) ]


state 65

    (23) expr -> expr TIMES expr .
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    FPLUS           reduce using rule 23 (expr -> expr TIMES expr .)
    FMINUS          reduce using rule 23 (expr -> expr TIMES expr .)
    FTIMES          reduce using rule 23 (expr -> expr TIMES expr .)
    FDIVIDE         reduce using rule 23 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 23 (expr -> expr TIMES expr .)
    FUNCTION        reduce using rule 23 (expr -> expr TIMES expr .)
    CALL            reduce using rule 23 (expr -> expr TIMES expr .)
    WHILE           reduce using rule 23 (expr -> expr TIMES expr .)
    FOR             reduce using rule 23 (expr -> expr TIMES expr .)
    IF              reduce using rule 23 (expr -> expr TIMES expr .)
    ELSEIF          reduce using rule 23 (expr -> expr TIMES expr .)
    ELSE            reduce using rule 23 (expr -> expr TIMES expr .)
    DVAR            reduce using rule 23 (expr -> expr TIMES expr .)
    VAR             reduce using rule 23 (expr -> expr TIMES expr .)
    ARRAY           reduce using rule 23 (expr -> expr TIMES expr .)
    PRINT           reduce using rule 23 (expr -> expr TIMES expr .)
    DEFFINISH       reduce using rule 23 (expr -> expr TIMES expr .)
    NUMBER          reduce using rule 23 (expr -> expr TIMES expr .)
    DNUMBER         reduce using rule 23 (expr -> expr TIMES expr .)
    BOOLEAN         reduce using rule 23 (expr -> expr TIMES expr .)
    STRING          reduce using rule 23 (expr -> expr TIMES expr .)
    LPAREN          reduce using rule 23 (expr -> expr TIMES expr .)
    $end            reduce using rule 23 (expr -> expr TIMES expr .)
    SEMICOLON       reduce using rule 23 (expr -> expr TIMES expr .)
    RCB             reduce using rule 23 (expr -> expr TIMES expr .)
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43

  ! COMMA           [ reduce using rule 23 (expr -> expr TIMES expr .) ]
  ! PLUS            [ reduce using rule 23 (expr -> expr TIMES expr .) ]
  ! MINUS           [ reduce using rule 23 (expr -> expr TIMES expr .) ]
  ! TIMES           [ reduce using rule 23 (expr -> expr TIMES expr .) ]
  ! DIVIDE          [ reduce using rule 23 (expr -> expr TIMES expr .) ]
  ! AND             [ reduce using rule 23 (expr -> expr TIMES expr .) ]
  ! OR              [ reduce using rule 23 (expr -> expr TIMES expr .) ]
  ! ISEQUAL         [ reduce using rule 23 (expr -> expr TIMES expr .) ]
  ! SMALLER         [ reduce using rule 23 (expr -> expr TIMES expr .) ]
  ! GREATER         [ reduce using rule 23 (expr -> expr TIMES expr .) ]
  ! NOT             [ reduce using rule 23 (expr -> expr TIMES expr .) ]


state 66

    (24) expr -> expr DIVIDE expr .
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    FPLUS           reduce using rule 24 (expr -> expr DIVIDE expr .)
    FMINUS          reduce using rule 24 (expr -> expr DIVIDE expr .)
    FTIMES          reduce using rule 24 (expr -> expr DIVIDE expr .)
    FDIVIDE         reduce using rule 24 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 24 (expr -> expr DIVIDE expr .)
    FUNCTION        reduce using rule 24 (expr -> expr DIVIDE expr .)
    CALL            reduce using rule 24 (expr -> expr DIVIDE expr .)
    WHILE           reduce using rule 24 (expr -> expr DIVIDE expr .)
    FOR             reduce using rule 24 (expr -> expr DIVIDE expr .)
    IF              reduce using rule 24 (expr -> expr DIVIDE expr .)
    ELSEIF          reduce using rule 24 (expr -> expr DIVIDE expr .)
    ELSE            reduce using rule 24 (expr -> expr DIVIDE expr .)
    DVAR            reduce using rule 24 (expr -> expr DIVIDE expr .)
    VAR             reduce using rule 24 (expr -> expr DIVIDE expr .)
    ARRAY           reduce using rule 24 (expr -> expr DIVIDE expr .)
    PRINT           reduce using rule 24 (expr -> expr DIVIDE expr .)
    DEFFINISH       reduce using rule 24 (expr -> expr DIVIDE expr .)
    NUMBER          reduce using rule 24 (expr -> expr DIVIDE expr .)
    DNUMBER         reduce using rule 24 (expr -> expr DIVIDE expr .)
    BOOLEAN         reduce using rule 24 (expr -> expr DIVIDE expr .)
    STRING          reduce using rule 24 (expr -> expr DIVIDE expr .)
    LPAREN          reduce using rule 24 (expr -> expr DIVIDE expr .)
    $end            reduce using rule 24 (expr -> expr DIVIDE expr .)
    SEMICOLON       reduce using rule 24 (expr -> expr DIVIDE expr .)
    RCB             reduce using rule 24 (expr -> expr DIVIDE expr .)
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43

  ! COMMA           [ reduce using rule 24 (expr -> expr DIVIDE expr .) ]
  ! PLUS            [ reduce using rule 24 (expr -> expr DIVIDE expr .) ]
  ! MINUS           [ reduce using rule 24 (expr -> expr DIVIDE expr .) ]
  ! TIMES           [ reduce using rule 24 (expr -> expr DIVIDE expr .) ]
  ! DIVIDE          [ reduce using rule 24 (expr -> expr DIVIDE expr .) ]
  ! AND             [ reduce using rule 24 (expr -> expr DIVIDE expr .) ]
  ! OR              [ reduce using rule 24 (expr -> expr DIVIDE expr .) ]
  ! ISEQUAL         [ reduce using rule 24 (expr -> expr DIVIDE expr .) ]
  ! SMALLER         [ reduce using rule 24 (expr -> expr DIVIDE expr .) ]
  ! GREATER         [ reduce using rule 24 (expr -> expr DIVIDE expr .) ]
  ! NOT             [ reduce using rule 24 (expr -> expr DIVIDE expr .) ]


state 67

    (25) expr -> expr AND expr .
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    FPLUS           reduce using rule 25 (expr -> expr AND expr .)
    FMINUS          reduce using rule 25 (expr -> expr AND expr .)
    FTIMES          reduce using rule 25 (expr -> expr AND expr .)
    FDIVIDE         reduce using rule 25 (expr -> expr AND expr .)
    RPAREN          reduce using rule 25 (expr -> expr AND expr .)
    FUNCTION        reduce using rule 25 (expr -> expr AND expr .)
    CALL            reduce using rule 25 (expr -> expr AND expr .)
    WHILE           reduce using rule 25 (expr -> expr AND expr .)
    FOR             reduce using rule 25 (expr -> expr AND expr .)
    IF              reduce using rule 25 (expr -> expr AND expr .)
    ELSEIF          reduce using rule 25 (expr -> expr AND expr .)
    ELSE            reduce using rule 25 (expr -> expr AND expr .)
    DVAR            reduce using rule 25 (expr -> expr AND expr .)
    VAR             reduce using rule 25 (expr -> expr AND expr .)
    ARRAY           reduce using rule 25 (expr -> expr AND expr .)
    PRINT           reduce using rule 25 (expr -> expr AND expr .)
    DEFFINISH       reduce using rule 25 (expr -> expr AND expr .)
    NUMBER          reduce using rule 25 (expr -> expr AND expr .)
    DNUMBER         reduce using rule 25 (expr -> expr AND expr .)
    BOOLEAN         reduce using rule 25 (expr -> expr AND expr .)
    STRING          reduce using rule 25 (expr -> expr AND expr .)
    LPAREN          reduce using rule 25 (expr -> expr AND expr .)
    $end            reduce using rule 25 (expr -> expr AND expr .)
    SEMICOLON       reduce using rule 25 (expr -> expr AND expr .)
    RCB             reduce using rule 25 (expr -> expr AND expr .)
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43

  ! COMMA           [ reduce using rule 25 (expr -> expr AND expr .) ]
  ! PLUS            [ reduce using rule 25 (expr -> expr AND expr .) ]
  ! MINUS           [ reduce using rule 25 (expr -> expr AND expr .) ]
  ! TIMES           [ reduce using rule 25 (expr -> expr AND expr .) ]
  ! DIVIDE          [ reduce using rule 25 (expr -> expr AND expr .) ]
  ! AND             [ reduce using rule 25 (expr -> expr AND expr .) ]
  ! OR              [ reduce using rule 25 (expr -> expr AND expr .) ]
  ! ISEQUAL         [ reduce using rule 25 (expr -> expr AND expr .) ]
  ! SMALLER         [ reduce using rule 25 (expr -> expr AND expr .) ]
  ! GREATER         [ reduce using rule 25 (expr -> expr AND expr .) ]
  ! NOT             [ reduce using rule 25 (expr -> expr AND expr .) ]


state 68

    (26) expr -> expr OR expr .
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    FPLUS           reduce using rule 26 (expr -> expr OR expr .)
    FMINUS          reduce using rule 26 (expr -> expr OR expr .)
    FTIMES          reduce using rule 26 (expr -> expr OR expr .)
    FDIVIDE         reduce using rule 26 (expr -> expr OR expr .)
    RPAREN          reduce using rule 26 (expr -> expr OR expr .)
    FUNCTION        reduce using rule 26 (expr -> expr OR expr .)
    CALL            reduce using rule 26 (expr -> expr OR expr .)
    WHILE           reduce using rule 26 (expr -> expr OR expr .)
    FOR             reduce using rule 26 (expr -> expr OR expr .)
    IF              reduce using rule 26 (expr -> expr OR expr .)
    ELSEIF          reduce using rule 26 (expr -> expr OR expr .)
    ELSE            reduce using rule 26 (expr -> expr OR expr .)
    DVAR            reduce using rule 26 (expr -> expr OR expr .)
    VAR             reduce using rule 26 (expr -> expr OR expr .)
    ARRAY           reduce using rule 26 (expr -> expr OR expr .)
    PRINT           reduce using rule 26 (expr -> expr OR expr .)
    DEFFINISH       reduce using rule 26 (expr -> expr OR expr .)
    NUMBER          reduce using rule 26 (expr -> expr OR expr .)
    DNUMBER         reduce using rule 26 (expr -> expr OR expr .)
    BOOLEAN         reduce using rule 26 (expr -> expr OR expr .)
    STRING          reduce using rule 26 (expr -> expr OR expr .)
    LPAREN          reduce using rule 26 (expr -> expr OR expr .)
    $end            reduce using rule 26 (expr -> expr OR expr .)
    SEMICOLON       reduce using rule 26 (expr -> expr OR expr .)
    RCB             reduce using rule 26 (expr -> expr OR expr .)
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43

  ! COMMA           [ reduce using rule 26 (expr -> expr OR expr .) ]
  ! PLUS            [ reduce using rule 26 (expr -> expr OR expr .) ]
  ! MINUS           [ reduce using rule 26 (expr -> expr OR expr .) ]
  ! TIMES           [ reduce using rule 26 (expr -> expr OR expr .) ]
  ! DIVIDE          [ reduce using rule 26 (expr -> expr OR expr .) ]
  ! AND             [ reduce using rule 26 (expr -> expr OR expr .) ]
  ! OR              [ reduce using rule 26 (expr -> expr OR expr .) ]
  ! ISEQUAL         [ reduce using rule 26 (expr -> expr OR expr .) ]
  ! SMALLER         [ reduce using rule 26 (expr -> expr OR expr .) ]
  ! GREATER         [ reduce using rule 26 (expr -> expr OR expr .) ]
  ! NOT             [ reduce using rule 26 (expr -> expr OR expr .) ]


state 69

    (31) expr -> expr ISEQUAL expr .
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    FPLUS           reduce using rule 31 (expr -> expr ISEQUAL expr .)
    FMINUS          reduce using rule 31 (expr -> expr ISEQUAL expr .)
    FTIMES          reduce using rule 31 (expr -> expr ISEQUAL expr .)
    FDIVIDE         reduce using rule 31 (expr -> expr ISEQUAL expr .)
    RPAREN          reduce using rule 31 (expr -> expr ISEQUAL expr .)
    FUNCTION        reduce using rule 31 (expr -> expr ISEQUAL expr .)
    CALL            reduce using rule 31 (expr -> expr ISEQUAL expr .)
    WHILE           reduce using rule 31 (expr -> expr ISEQUAL expr .)
    FOR             reduce using rule 31 (expr -> expr ISEQUAL expr .)
    IF              reduce using rule 31 (expr -> expr ISEQUAL expr .)
    ELSEIF          reduce using rule 31 (expr -> expr ISEQUAL expr .)
    ELSE            reduce using rule 31 (expr -> expr ISEQUAL expr .)
    DVAR            reduce using rule 31 (expr -> expr ISEQUAL expr .)
    VAR             reduce using rule 31 (expr -> expr ISEQUAL expr .)
    ARRAY           reduce using rule 31 (expr -> expr ISEQUAL expr .)
    PRINT           reduce using rule 31 (expr -> expr ISEQUAL expr .)
    DEFFINISH       reduce using rule 31 (expr -> expr ISEQUAL expr .)
    NUMBER          reduce using rule 31 (expr -> expr ISEQUAL expr .)
    DNUMBER         reduce using rule 31 (expr -> expr ISEQUAL expr .)
    BOOLEAN         reduce using rule 31 (expr -> expr ISEQUAL expr .)
    STRING          reduce using rule 31 (expr -> expr ISEQUAL expr .)
    LPAREN          reduce using rule 31 (expr -> expr ISEQUAL expr .)
    $end            reduce using rule 31 (expr -> expr ISEQUAL expr .)
    SEMICOLON       reduce using rule 31 (expr -> expr ISEQUAL expr .)
    RCB             reduce using rule 31 (expr -> expr ISEQUAL expr .)
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43

  ! COMMA           [ reduce using rule 31 (expr -> expr ISEQUAL expr .) ]
  ! PLUS            [ reduce using rule 31 (expr -> expr ISEQUAL expr .) ]
  ! MINUS           [ reduce using rule 31 (expr -> expr ISEQUAL expr .) ]
  ! TIMES           [ reduce using rule 31 (expr -> expr ISEQUAL expr .) ]
  ! DIVIDE          [ reduce using rule 31 (expr -> expr ISEQUAL expr .) ]
  ! AND             [ reduce using rule 31 (expr -> expr ISEQUAL expr .) ]
  ! OR              [ reduce using rule 31 (expr -> expr ISEQUAL expr .) ]
  ! ISEQUAL         [ reduce using rule 31 (expr -> expr ISEQUAL expr .) ]
  ! SMALLER         [ reduce using rule 31 (expr -> expr ISEQUAL expr .) ]
  ! GREATER         [ reduce using rule 31 (expr -> expr ISEQUAL expr .) ]
  ! NOT             [ reduce using rule 31 (expr -> expr ISEQUAL expr .) ]


state 70

    (32) expr -> expr SMALLER expr .
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    FPLUS           reduce using rule 32 (expr -> expr SMALLER expr .)
    FMINUS          reduce using rule 32 (expr -> expr SMALLER expr .)
    FTIMES          reduce using rule 32 (expr -> expr SMALLER expr .)
    FDIVIDE         reduce using rule 32 (expr -> expr SMALLER expr .)
    RPAREN          reduce using rule 32 (expr -> expr SMALLER expr .)
    FUNCTION        reduce using rule 32 (expr -> expr SMALLER expr .)
    CALL            reduce using rule 32 (expr -> expr SMALLER expr .)
    WHILE           reduce using rule 32 (expr -> expr SMALLER expr .)
    FOR             reduce using rule 32 (expr -> expr SMALLER expr .)
    IF              reduce using rule 32 (expr -> expr SMALLER expr .)
    ELSEIF          reduce using rule 32 (expr -> expr SMALLER expr .)
    ELSE            reduce using rule 32 (expr -> expr SMALLER expr .)
    DVAR            reduce using rule 32 (expr -> expr SMALLER expr .)
    VAR             reduce using rule 32 (expr -> expr SMALLER expr .)
    ARRAY           reduce using rule 32 (expr -> expr SMALLER expr .)
    PRINT           reduce using rule 32 (expr -> expr SMALLER expr .)
    DEFFINISH       reduce using rule 32 (expr -> expr SMALLER expr .)
    NUMBER          reduce using rule 32 (expr -> expr SMALLER expr .)
    DNUMBER         reduce using rule 32 (expr -> expr SMALLER expr .)
    BOOLEAN         reduce using rule 32 (expr -> expr SMALLER expr .)
    STRING          reduce using rule 32 (expr -> expr SMALLER expr .)
    LPAREN          reduce using rule 32 (expr -> expr SMALLER expr .)
    $end            reduce using rule 32 (expr -> expr SMALLER expr .)
    SEMICOLON       reduce using rule 32 (expr -> expr SMALLER expr .)
    RCB             reduce using rule 32 (expr -> expr SMALLER expr .)
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43

  ! COMMA           [ reduce using rule 32 (expr -> expr SMALLER expr .) ]
  ! PLUS            [ reduce using rule 32 (expr -> expr SMALLER expr .) ]
  ! MINUS           [ reduce using rule 32 (expr -> expr SMALLER expr .) ]
  ! TIMES           [ reduce using rule 32 (expr -> expr SMALLER expr .) ]
  ! DIVIDE          [ reduce using rule 32 (expr -> expr SMALLER expr .) ]
  ! AND             [ reduce using rule 32 (expr -> expr SMALLER expr .) ]
  ! OR              [ reduce using rule 32 (expr -> expr SMALLER expr .) ]
  ! ISEQUAL         [ reduce using rule 32 (expr -> expr SMALLER expr .) ]
  ! SMALLER         [ reduce using rule 32 (expr -> expr SMALLER expr .) ]
  ! GREATER         [ reduce using rule 32 (expr -> expr SMALLER expr .) ]
  ! NOT             [ reduce using rule 32 (expr -> expr SMALLER expr .) ]


state 71

    (33) expr -> expr GREATER expr .
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    FPLUS           reduce using rule 33 (expr -> expr GREATER expr .)
    FMINUS          reduce using rule 33 (expr -> expr GREATER expr .)
    FTIMES          reduce using rule 33 (expr -> expr GREATER expr .)
    FDIVIDE         reduce using rule 33 (expr -> expr GREATER expr .)
    RPAREN          reduce using rule 33 (expr -> expr GREATER expr .)
    FUNCTION        reduce using rule 33 (expr -> expr GREATER expr .)
    CALL            reduce using rule 33 (expr -> expr GREATER expr .)
    WHILE           reduce using rule 33 (expr -> expr GREATER expr .)
    FOR             reduce using rule 33 (expr -> expr GREATER expr .)
    IF              reduce using rule 33 (expr -> expr GREATER expr .)
    ELSEIF          reduce using rule 33 (expr -> expr GREATER expr .)
    ELSE            reduce using rule 33 (expr -> expr GREATER expr .)
    DVAR            reduce using rule 33 (expr -> expr GREATER expr .)
    VAR             reduce using rule 33 (expr -> expr GREATER expr .)
    ARRAY           reduce using rule 33 (expr -> expr GREATER expr .)
    PRINT           reduce using rule 33 (expr -> expr GREATER expr .)
    DEFFINISH       reduce using rule 33 (expr -> expr GREATER expr .)
    NUMBER          reduce using rule 33 (expr -> expr GREATER expr .)
    DNUMBER         reduce using rule 33 (expr -> expr GREATER expr .)
    BOOLEAN         reduce using rule 33 (expr -> expr GREATER expr .)
    STRING          reduce using rule 33 (expr -> expr GREATER expr .)
    LPAREN          reduce using rule 33 (expr -> expr GREATER expr .)
    $end            reduce using rule 33 (expr -> expr GREATER expr .)
    SEMICOLON       reduce using rule 33 (expr -> expr GREATER expr .)
    RCB             reduce using rule 33 (expr -> expr GREATER expr .)
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43

  ! COMMA           [ reduce using rule 33 (expr -> expr GREATER expr .) ]
  ! PLUS            [ reduce using rule 33 (expr -> expr GREATER expr .) ]
  ! MINUS           [ reduce using rule 33 (expr -> expr GREATER expr .) ]
  ! TIMES           [ reduce using rule 33 (expr -> expr GREATER expr .) ]
  ! DIVIDE          [ reduce using rule 33 (expr -> expr GREATER expr .) ]
  ! AND             [ reduce using rule 33 (expr -> expr GREATER expr .) ]
  ! OR              [ reduce using rule 33 (expr -> expr GREATER expr .) ]
  ! ISEQUAL         [ reduce using rule 33 (expr -> expr GREATER expr .) ]
  ! SMALLER         [ reduce using rule 33 (expr -> expr GREATER expr .) ]
  ! GREATER         [ reduce using rule 33 (expr -> expr GREATER expr .) ]
  ! NOT             [ reduce using rule 33 (expr -> expr GREATER expr .) ]


state 72

    (34) expr -> expr NOT ISEQUAL . expr
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 87

state 73

    (35) expr -> expr NOT SMALLER . expr
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 88

state 74

    (36) expr -> expr NOT GREATER . expr
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 89

state 75

    (9) statement -> FOR LPAREN statement . SEMICOLON expr SEMICOLON statement RPAREN DEFSTART
    (3) statement -> statement . COMMA statement

    SEMICOLON       shift and go to state 90
    COMMA           shift and go to state 22


state 76

    (10) statement -> IF LPAREN expr . RPAREN DEFSTART
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

    RPAREN          shift and go to state 91
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43


state 77

    (11) statement -> ELSEIF LPAREN expr . RPAREN DEFSTART
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

    RPAREN          shift and go to state 92
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43


state 78

    (15) statement -> DVAR VAR EQUAL . expr
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 93

state 79

    (18) statement -> ARRAY VAR EQUAL . LCB expr RCB

    LCB             shift and go to state 94


state 80

    (20) statement -> PRINT LPAREN expr . RPAREN
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

    RPAREN          shift and go to state 95
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43


state 81

    (4) statement -> FUNCTION VAR LPAREN statement . RPAREN DEFSTART
    (3) statement -> statement . COMMA statement

    RPAREN          shift and go to state 96
    COMMA           shift and go to state 22


state 82

    (5) statement -> FUNCTION VAR LPAREN RPAREN . DEFSTART

    DEFSTART        shift and go to state 97


state 83

    (17) statement -> VAR EQUAL LCB expr . RCB
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

    RCB             shift and go to state 98
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43


state 84

    (6) statement -> CALL VAR LPAREN statement . RPAREN
    (3) statement -> statement . COMMA statement

    RPAREN          shift and go to state 99
    COMMA           shift and go to state 22


state 85

    (7) statement -> CALL VAR LPAREN RPAREN .

    COMMA           reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    FUNCTION        reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    CALL            reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    WHILE           reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    FOR             reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    IF              reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    ELSEIF          reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    ELSE            reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    DVAR            reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    VAR             reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    ARRAY           reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    PRINT           reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    DEFFINISH       reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    NUMBER          reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    DNUMBER         reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    BOOLEAN         reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    STRING          reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    LPAREN          reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    $end            reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    SEMICOLON       reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)
    RPAREN          reduce using rule 7 (statement -> CALL VAR LPAREN RPAREN .)


state 86

    (8) statement -> WHILE LPAREN expr RPAREN . DEFSTART

    DEFSTART        shift and go to state 100


state 87

    (34) expr -> expr NOT ISEQUAL expr .
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    FPLUS           reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    FMINUS          reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    FTIMES          reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    FDIVIDE         reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    RPAREN          reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    FUNCTION        reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    CALL            reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    WHILE           reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    FOR             reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    IF              reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    ELSEIF          reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    ELSE            reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    DVAR            reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    VAR             reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    ARRAY           reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    PRINT           reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    DEFFINISH       reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    NUMBER          reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    DNUMBER         reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    BOOLEAN         reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    STRING          reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    LPAREN          reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    $end            reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    SEMICOLON       reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    RCB             reduce using rule 34 (expr -> expr NOT ISEQUAL expr .)
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43

  ! COMMA           [ reduce using rule 34 (expr -> expr NOT ISEQUAL expr .) ]
  ! PLUS            [ reduce using rule 34 (expr -> expr NOT ISEQUAL expr .) ]
  ! MINUS           [ reduce using rule 34 (expr -> expr NOT ISEQUAL expr .) ]
  ! TIMES           [ reduce using rule 34 (expr -> expr NOT ISEQUAL expr .) ]
  ! DIVIDE          [ reduce using rule 34 (expr -> expr NOT ISEQUAL expr .) ]
  ! AND             [ reduce using rule 34 (expr -> expr NOT ISEQUAL expr .) ]
  ! OR              [ reduce using rule 34 (expr -> expr NOT ISEQUAL expr .) ]
  ! ISEQUAL         [ reduce using rule 34 (expr -> expr NOT ISEQUAL expr .) ]
  ! SMALLER         [ reduce using rule 34 (expr -> expr NOT ISEQUAL expr .) ]
  ! GREATER         [ reduce using rule 34 (expr -> expr NOT ISEQUAL expr .) ]
  ! NOT             [ reduce using rule 34 (expr -> expr NOT ISEQUAL expr .) ]


state 88

    (35) expr -> expr NOT SMALLER expr .
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    FPLUS           reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    FMINUS          reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    FTIMES          reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    FDIVIDE         reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    RPAREN          reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    FUNCTION        reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    CALL            reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    WHILE           reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    FOR             reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    IF              reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    ELSEIF          reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    ELSE            reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    DVAR            reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    VAR             reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    ARRAY           reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    PRINT           reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    DEFFINISH       reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    NUMBER          reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    DNUMBER         reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    BOOLEAN         reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    STRING          reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    LPAREN          reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    $end            reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    SEMICOLON       reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    RCB             reduce using rule 35 (expr -> expr NOT SMALLER expr .)
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43

  ! COMMA           [ reduce using rule 35 (expr -> expr NOT SMALLER expr .) ]
  ! PLUS            [ reduce using rule 35 (expr -> expr NOT SMALLER expr .) ]
  ! MINUS           [ reduce using rule 35 (expr -> expr NOT SMALLER expr .) ]
  ! TIMES           [ reduce using rule 35 (expr -> expr NOT SMALLER expr .) ]
  ! DIVIDE          [ reduce using rule 35 (expr -> expr NOT SMALLER expr .) ]
  ! AND             [ reduce using rule 35 (expr -> expr NOT SMALLER expr .) ]
  ! OR              [ reduce using rule 35 (expr -> expr NOT SMALLER expr .) ]
  ! ISEQUAL         [ reduce using rule 35 (expr -> expr NOT SMALLER expr .) ]
  ! SMALLER         [ reduce using rule 35 (expr -> expr NOT SMALLER expr .) ]
  ! GREATER         [ reduce using rule 35 (expr -> expr NOT SMALLER expr .) ]
  ! NOT             [ reduce using rule 35 (expr -> expr NOT SMALLER expr .) ]


state 89

    (36) expr -> expr NOT GREATER expr .
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for SMALLER resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    FPLUS           reduce using rule 36 (expr -> expr NOT GREATER expr .)
    FMINUS          reduce using rule 36 (expr -> expr NOT GREATER expr .)
    FTIMES          reduce using rule 36 (expr -> expr NOT GREATER expr .)
    FDIVIDE         reduce using rule 36 (expr -> expr NOT GREATER expr .)
    RPAREN          reduce using rule 36 (expr -> expr NOT GREATER expr .)
    FUNCTION        reduce using rule 36 (expr -> expr NOT GREATER expr .)
    CALL            reduce using rule 36 (expr -> expr NOT GREATER expr .)
    WHILE           reduce using rule 36 (expr -> expr NOT GREATER expr .)
    FOR             reduce using rule 36 (expr -> expr NOT GREATER expr .)
    IF              reduce using rule 36 (expr -> expr NOT GREATER expr .)
    ELSEIF          reduce using rule 36 (expr -> expr NOT GREATER expr .)
    ELSE            reduce using rule 36 (expr -> expr NOT GREATER expr .)
    DVAR            reduce using rule 36 (expr -> expr NOT GREATER expr .)
    VAR             reduce using rule 36 (expr -> expr NOT GREATER expr .)
    ARRAY           reduce using rule 36 (expr -> expr NOT GREATER expr .)
    PRINT           reduce using rule 36 (expr -> expr NOT GREATER expr .)
    DEFFINISH       reduce using rule 36 (expr -> expr NOT GREATER expr .)
    NUMBER          reduce using rule 36 (expr -> expr NOT GREATER expr .)
    DNUMBER         reduce using rule 36 (expr -> expr NOT GREATER expr .)
    BOOLEAN         reduce using rule 36 (expr -> expr NOT GREATER expr .)
    STRING          reduce using rule 36 (expr -> expr NOT GREATER expr .)
    LPAREN          reduce using rule 36 (expr -> expr NOT GREATER expr .)
    $end            reduce using rule 36 (expr -> expr NOT GREATER expr .)
    SEMICOLON       reduce using rule 36 (expr -> expr NOT GREATER expr .)
    RCB             reduce using rule 36 (expr -> expr NOT GREATER expr .)
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43

  ! COMMA           [ reduce using rule 36 (expr -> expr NOT GREATER expr .) ]
  ! PLUS            [ reduce using rule 36 (expr -> expr NOT GREATER expr .) ]
  ! MINUS           [ reduce using rule 36 (expr -> expr NOT GREATER expr .) ]
  ! TIMES           [ reduce using rule 36 (expr -> expr NOT GREATER expr .) ]
  ! DIVIDE          [ reduce using rule 36 (expr -> expr NOT GREATER expr .) ]
  ! AND             [ reduce using rule 36 (expr -> expr NOT GREATER expr .) ]
  ! OR              [ reduce using rule 36 (expr -> expr NOT GREATER expr .) ]
  ! ISEQUAL         [ reduce using rule 36 (expr -> expr NOT GREATER expr .) ]
  ! SMALLER         [ reduce using rule 36 (expr -> expr NOT GREATER expr .) ]
  ! GREATER         [ reduce using rule 36 (expr -> expr NOT GREATER expr .) ]
  ! NOT             [ reduce using rule 36 (expr -> expr NOT GREATER expr .) ]


state 90

    (9) statement -> FOR LPAREN statement SEMICOLON . expr SEMICOLON statement RPAREN DEFSTART
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 101

state 91

    (10) statement -> IF LPAREN expr RPAREN . DEFSTART

    DEFSTART        shift and go to state 102


state 92

    (11) statement -> ELSEIF LPAREN expr RPAREN . DEFSTART

    DEFSTART        shift and go to state 103


state 93

    (15) statement -> DVAR VAR EQUAL expr .
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

  ! shift/reduce conflict for COMMA resolved as shift
    FUNCTION        reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    CALL            reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    WHILE           reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    FOR             reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    IF              reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    ELSEIF          reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    ELSE            reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    DVAR            reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    VAR             reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    ARRAY           reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    PRINT           reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    DEFFINISH       reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    NUMBER          reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    DNUMBER         reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    BOOLEAN         reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    STRING          reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    LPAREN          reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    $end            reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    SEMICOLON       reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    RPAREN          reduce using rule 15 (statement -> DVAR VAR EQUAL expr .)
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43

  ! COMMA           [ reduce using rule 15 (statement -> DVAR VAR EQUAL expr .) ]


state 94

    (18) statement -> ARRAY VAR EQUAL LCB . expr RCB
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    VAR             shift and go to state 26
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    expr                           shift and go to state 104

state 95

    (20) statement -> PRINT LPAREN expr RPAREN .

    COMMA           reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    FUNCTION        reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    CALL            reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    WHILE           reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    FOR             reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    IF              reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    ELSEIF          reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    ELSE            reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    DVAR            reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    VAR             reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    ARRAY           reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    PRINT           reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    DEFFINISH       reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    NUMBER          reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    DNUMBER         reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    BOOLEAN         reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    STRING          reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    LPAREN          reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    $end            reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)
    RPAREN          reduce using rule 20 (statement -> PRINT LPAREN expr RPAREN .)


state 96

    (4) statement -> FUNCTION VAR LPAREN statement RPAREN . DEFSTART

    DEFSTART        shift and go to state 105


state 97

    (5) statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .

    COMMA           reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    FUNCTION        reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    CALL            reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    WHILE           reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    FOR             reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    IF              reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    ELSEIF          reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    ELSE            reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    DVAR            reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    VAR             reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    ARRAY           reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    PRINT           reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    DEFFINISH       reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    NUMBER          reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    DNUMBER         reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    BOOLEAN         reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    STRING          reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    LPAREN          reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    $end            reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    SEMICOLON       reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)
    RPAREN          reduce using rule 5 (statement -> FUNCTION VAR LPAREN RPAREN DEFSTART .)


state 98

    (17) statement -> VAR EQUAL LCB expr RCB .

    COMMA           reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    FUNCTION        reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    CALL            reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    WHILE           reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    FOR             reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    IF              reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    ELSEIF          reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    ELSE            reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    DVAR            reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    VAR             reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    ARRAY           reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    PRINT           reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    DEFFINISH       reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    NUMBER          reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    DNUMBER         reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    BOOLEAN         reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    STRING          reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    LPAREN          reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    $end            reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    SEMICOLON       reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)
    RPAREN          reduce using rule 17 (statement -> VAR EQUAL LCB expr RCB .)


state 99

    (6) statement -> CALL VAR LPAREN statement RPAREN .

    COMMA           reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    FUNCTION        reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    CALL            reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    WHILE           reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    FOR             reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    IF              reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    ELSEIF          reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    ELSE            reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    DVAR            reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    VAR             reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    ARRAY           reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    PRINT           reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    DEFFINISH       reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    NUMBER          reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    DNUMBER         reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    BOOLEAN         reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    STRING          reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    LPAREN          reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    $end            reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    SEMICOLON       reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)
    RPAREN          reduce using rule 6 (statement -> CALL VAR LPAREN statement RPAREN .)


state 100

    (8) statement -> WHILE LPAREN expr RPAREN DEFSTART .

    COMMA           reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    FUNCTION        reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    CALL            reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    WHILE           reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    FOR             reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    IF              reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    ELSEIF          reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    ELSE            reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    DVAR            reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    VAR             reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    ARRAY           reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    PRINT           reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    DEFFINISH       reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    NUMBER          reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    DNUMBER         reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    BOOLEAN         reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    STRING          reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    LPAREN          reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    $end            reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    SEMICOLON       reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)
    RPAREN          reduce using rule 8 (statement -> WHILE LPAREN expr RPAREN DEFSTART .)


state 101

    (9) statement -> FOR LPAREN statement SEMICOLON expr . SEMICOLON statement RPAREN DEFSTART
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

    SEMICOLON       shift and go to state 106
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43


state 102

    (10) statement -> IF LPAREN expr RPAREN DEFSTART .

    COMMA           reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    FUNCTION        reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    CALL            reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    WHILE           reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    FOR             reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    IF              reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    ELSEIF          reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    ELSE            reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    DVAR            reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    VAR             reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    ARRAY           reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    PRINT           reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    DEFFINISH       reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    NUMBER          reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    DNUMBER         reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    BOOLEAN         reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    STRING          reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    LPAREN          reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    $end            reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    SEMICOLON       reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)
    RPAREN          reduce using rule 10 (statement -> IF LPAREN expr RPAREN DEFSTART .)


state 103

    (11) statement -> ELSEIF LPAREN expr RPAREN DEFSTART .

    COMMA           reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    FUNCTION        reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    CALL            reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    WHILE           reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    FOR             reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    IF              reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    ELSEIF          reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    ELSE            reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    DVAR            reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    VAR             reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    ARRAY           reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    PRINT           reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    DEFFINISH       reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    NUMBER          reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    DNUMBER         reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    BOOLEAN         reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    STRING          reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    LPAREN          reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    $end            reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    SEMICOLON       reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)
    RPAREN          reduce using rule 11 (statement -> ELSEIF LPAREN expr RPAREN DEFSTART .)


state 104

    (18) statement -> ARRAY VAR EQUAL LCB expr . RCB
    (19) expr -> expr . COMMA expr
    (21) expr -> expr . PLUS expr
    (22) expr -> expr . MINUS expr
    (23) expr -> expr . TIMES expr
    (24) expr -> expr . DIVIDE expr
    (25) expr -> expr . AND expr
    (26) expr -> expr . OR expr
    (31) expr -> expr . ISEQUAL expr
    (32) expr -> expr . SMALLER expr
    (33) expr -> expr . GREATER expr
    (34) expr -> expr . NOT ISEQUAL expr
    (35) expr -> expr . NOT SMALLER expr
    (36) expr -> expr . NOT GREATER expr

    RCB             shift and go to state 107
    COMMA           shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    ISEQUAL         shift and go to state 40
    SMALLER         shift and go to state 41
    GREATER         shift and go to state 42
    NOT             shift and go to state 43


state 105

    (4) statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .

    COMMA           reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    FUNCTION        reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    CALL            reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    WHILE           reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    FOR             reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    IF              reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    ELSEIF          reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    ELSE            reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    DVAR            reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    VAR             reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    ARRAY           reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    PRINT           reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    DEFFINISH       reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    NUMBER          reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    DNUMBER         reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    BOOLEAN         reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    STRING          reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    LPAREN          reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    $end            reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    SEMICOLON       reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)
    RPAREN          reduce using rule 4 (statement -> FUNCTION VAR LPAREN statement RPAREN DEFSTART .)


state 106

    (9) statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON . statement RPAREN DEFSTART
    (3) statement -> . statement COMMA statement
    (4) statement -> . FUNCTION VAR LPAREN statement RPAREN DEFSTART
    (5) statement -> . FUNCTION VAR LPAREN RPAREN DEFSTART
    (6) statement -> . CALL VAR LPAREN statement RPAREN
    (7) statement -> . CALL VAR LPAREN RPAREN
    (8) statement -> . WHILE LPAREN expr RPAREN DEFSTART
    (9) statement -> . FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART
    (10) statement -> . IF LPAREN expr RPAREN DEFSTART
    (11) statement -> . ELSEIF LPAREN expr RPAREN DEFSTART
    (12) statement -> . ELSE DEFSTART
    (13) statement -> . DVAR VAR
    (14) statement -> . VAR EQUAL expr
    (15) statement -> . DVAR VAR EQUAL expr
    (16) statement -> . ARRAY VAR
    (17) statement -> . VAR EQUAL LCB expr RCB
    (18) statement -> . ARRAY VAR EQUAL LCB expr RCB
    (20) statement -> . PRINT LPAREN expr RPAREN
    (27) statement -> . expr FPLUS expr
    (28) statement -> . expr FMINUS expr
    (29) statement -> . expr FTIMES expr
    (30) statement -> . expr FDIVIDE expr
    (43) statement -> . DEFFINISH
    (19) expr -> . expr COMMA expr
    (21) expr -> . expr PLUS expr
    (22) expr -> . expr MINUS expr
    (23) expr -> . expr TIMES expr
    (24) expr -> . expr DIVIDE expr
    (25) expr -> . expr AND expr
    (26) expr -> . expr OR expr
    (31) expr -> . expr ISEQUAL expr
    (32) expr -> . expr SMALLER expr
    (33) expr -> . expr GREATER expr
    (34) expr -> . expr NOT ISEQUAL expr
    (35) expr -> . expr NOT SMALLER expr
    (36) expr -> . expr NOT GREATER expr
    (37) expr -> . NUMBER
    (38) expr -> . DNUMBER
    (39) expr -> . BOOLEAN
    (40) expr -> . VAR
    (41) expr -> . STRING
    (42) expr -> . LPAREN expr RPAREN

    FUNCTION        shift and go to state 3
    CALL            shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 9
    IF              shift and go to state 10
    ELSEIF          shift and go to state 11
    ELSE            shift and go to state 12
    DVAR            shift and go to state 13
    VAR             shift and go to state 4
    ARRAY           shift and go to state 14
    PRINT           shift and go to state 15
    DEFFINISH       shift and go to state 16
    NUMBER          shift and go to state 17
    DNUMBER         shift and go to state 18
    BOOLEAN         shift and go to state 19
    STRING          shift and go to state 20
    LPAREN          shift and go to state 5

    statement                      shift and go to state 108
    expr                           shift and go to state 8

state 107

    (18) statement -> ARRAY VAR EQUAL LCB expr RCB .

    COMMA           reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    FUNCTION        reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    CALL            reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    WHILE           reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    FOR             reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    IF              reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    ELSEIF          reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    ELSE            reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    DVAR            reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    VAR             reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    ARRAY           reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    PRINT           reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    DEFFINISH       reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    NUMBER          reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    DNUMBER         reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    BOOLEAN         reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    STRING          reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    LPAREN          reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    $end            reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    SEMICOLON       reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)
    RPAREN          reduce using rule 18 (statement -> ARRAY VAR EQUAL LCB expr RCB .)


state 108

    (9) statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement . RPAREN DEFSTART
    (3) statement -> statement . COMMA statement

    RPAREN          shift and go to state 109
    COMMA           shift and go to state 22


state 109

    (9) statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN . DEFSTART

    DEFSTART        shift and go to state 110


state 110

    (9) statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .

    COMMA           reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    FUNCTION        reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    CALL            reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    WHILE           reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    FOR             reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    IF              reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    ELSEIF          reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    ELSE            reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    DVAR            reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    VAR             reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    ARRAY           reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    PRINT           reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    DEFFINISH       reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    NUMBER          reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    DNUMBER         reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    BOOLEAN         reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    STRING          reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    LPAREN          reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    $end            reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    SEMICOLON       reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)
    RPAREN          reduce using rule 9 (statement -> FOR LPAREN statement SEMICOLON expr SEMICOLON statement RPAREN DEFSTART .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 51 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 53 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 58 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 59 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 60 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 61 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 62 resolved as shift
WARNING: shift/reduce conflict for AND in state 62 resolved as shift
WARNING: shift/reduce conflict for OR in state 62 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 62 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 62 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 62 resolved as shift
WARNING: shift/reduce conflict for NOT in state 62 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 63 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 63 resolved as shift
WARNING: shift/reduce conflict for AND in state 63 resolved as shift
WARNING: shift/reduce conflict for OR in state 63 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 63 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 63 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 63 resolved as shift
WARNING: shift/reduce conflict for NOT in state 63 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 64 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 64 resolved as shift
WARNING: shift/reduce conflict for AND in state 64 resolved as shift
WARNING: shift/reduce conflict for OR in state 64 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 64 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 64 resolved as shift
WARNING: shift/reduce conflict for NOT in state 64 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 65 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 65 resolved as shift
WARNING: shift/reduce conflict for AND in state 65 resolved as shift
WARNING: shift/reduce conflict for OR in state 65 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 65 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 65 resolved as shift
WARNING: shift/reduce conflict for NOT in state 65 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 66 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 66 resolved as shift
WARNING: shift/reduce conflict for AND in state 66 resolved as shift
WARNING: shift/reduce conflict for OR in state 66 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 66 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 66 resolved as shift
WARNING: shift/reduce conflict for NOT in state 66 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 67 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 67 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 67 resolved as shift
WARNING: shift/reduce conflict for AND in state 67 resolved as shift
WARNING: shift/reduce conflict for OR in state 67 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 67 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 67 resolved as shift
WARNING: shift/reduce conflict for NOT in state 67 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 68 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 68 resolved as shift
WARNING: shift/reduce conflict for AND in state 68 resolved as shift
WARNING: shift/reduce conflict for OR in state 68 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 68 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 68 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 68 resolved as shift
WARNING: shift/reduce conflict for NOT in state 68 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 69 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 69 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 69 resolved as shift
WARNING: shift/reduce conflict for NOT in state 69 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for AND in state 70 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 70 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 70 resolved as shift
WARNING: shift/reduce conflict for NOT in state 70 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 71 resolved as shift
WARNING: shift/reduce conflict for AND in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 71 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 71 resolved as shift
WARNING: shift/reduce conflict for NOT in state 71 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 87 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 87 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 87 resolved as shift
WARNING: shift/reduce conflict for AND in state 87 resolved as shift
WARNING: shift/reduce conflict for OR in state 87 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 87 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 87 resolved as shift
WARNING: shift/reduce conflict for NOT in state 87 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 88 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 88 resolved as shift
WARNING: shift/reduce conflict for AND in state 88 resolved as shift
WARNING: shift/reduce conflict for OR in state 88 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 88 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 88 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 88 resolved as shift
WARNING: shift/reduce conflict for NOT in state 88 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 89 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 89 resolved as shift
WARNING: shift/reduce conflict for AND in state 89 resolved as shift
WARNING: shift/reduce conflict for OR in state 89 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for SMALLER in state 89 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 89 resolved as shift
WARNING: shift/reduce conflict for NOT in state 89 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 93 resolved as shift
